{
  "openapi": "3.0.0",
  "info": {
    "title": "Marketplace API",
    "description": "Marketplace API",
    "version": "1.0",
    "contact": {
      "name": "Marketplace",
      "url": "https://ordercloud.io",
      "email": "oheywood@four51.com"
    }
  },
  "servers": [
    {
      "url": "https://marketplace-api-qa.azurewebsites.net",
      "description": "Marketplace API"
    }
  ],
  "tags": [
    {
      "name": "Orchestration",
      "description": "Orchestration resources",
      "x-id": "Orchestration"
    },
    {
      "name": "Orchestration Products",
      "description": "\"Orchestration\" represents objects exposed for orchestration control",
      "x-section-id": "Orchestration"
    },
    {
      "name": "Orchestration Users",
      "description": "\"Orchestration\" represents Organization objects exposed for orchestration control",
      "x-section-id": "Orchestration"
    },
    {
      "name": "Orchestration Logs",
      "description": "\"Orchestration Logs\" represents logs of orchestration activities",
      "x-section-id": "Orchestration"
    },
    {
      "name": "Marketplace",
      "description": "Marketplace resources",
      "x-id": "Marketplace"
    },
    {
      "name": "Buyers",
      "description": "\"Buyers\" represents Buyers for Marketplace",
      "x-section-id": "Marketplace"
    },
    {
      "name": "Catalogs",
      "description": "\"Marketplace Catalogs\" for product groupings and visibility in Marketplace",
      "x-section-id": "Marketplace"
    },
    {
      "name": "Orders",
      "description": "\"Marketplace Orders\" for handling order commands in Marketplace",
      "x-section-id": "Marketplace"
    },
    {
      "name": "Shipments",
      "description": "\"Marketplace Shipments\" for making shipments in seller app",
      "x-section-id": "Marketplace"
    },
    {
      "name": "Suppliers",
      "description": "\"Marketplace Suppliers\" represents Supplier in Marketplace",
      "x-section-id": "Marketplace"
    },
    {
      "name": "Products",
      "description": "\"Products\" represents Products for Marketplace",
      "x-section-id": "Marketplace"
    },
    {
      "name": "Supplier Category Configs",
      "description": "\"Supplier Category Config\" represents Supplier Category Configuration",
      "x-section-id": "Marketplace"
    },
    {
      "name": "Buyer Locations",
      "description": "\"Files\" represents files for Marketplace content management control",
      "x-section-id": "Marketplace"
    },
    {
      "name": "Mes",
      "description": "Me and my stuff",
      "x-section-id": "Marketplace"
    },
    {
      "name": "Integration",
      "description": "Integration resources",
      "x-id": "Integration"
    },
    {
      "name": "Avalaras",
      "description": "\"Integration\" represents Avalara Tax Functionality",
      "x-section-id": "Integration"
    },
    {
      "name": "Me Payments",
      "description": "\"Integration\" represents ME Credit Card Payments for Marketplace",
      "x-section-id": "Integration"
    },
    {
      "name": "Me Credit Card Authorizations",
      "description": "\"Integration\" represents ME Credit Card Tokenization for Marketplace",
      "x-section-id": "Integration"
    },
    {
      "name": "Credit Card Authorizations",
      "description": "\"Integration\" represents Credit Card Tokenization for Marketplace",
      "x-section-id": "Integration"
    },
    {
      "name": "Exchange Rates",
      "description": "\"Integration\" represents Currency Conversion Charts",
      "x-section-id": "Integration"
    },
    {
      "name": "Validated Addresses",
      "description": "\"Integration\" represents Validated Addresses with suggestions",
      "x-section-id": "Integration"
    },
    {
      "name": "Content",
      "description": "Content resources",
      "x-id": "Content"
    },
    {
      "name": "Assets",
      "description": "\"Integration\" represents Assets",
      "x-section-id": "Content"
    },
    {
      "name": "Buyer Contents",
      "description": "",
      "x-section-id": "Content"
    },
    {
      "name": "Catalog Contents",
      "description": "",
      "x-section-id": "Content"
    },
    {
      "name": "Category Contents",
      "description": "",
      "x-section-id": "Content"
    },
    {
      "name": "Facet Contents",
      "description": "",
      "x-section-id": "Content"
    },
    {
      "name": "Product Contents",
      "description": "",
      "x-section-id": "Content"
    },
    {
      "name": "Promotion Contents",
      "description": "",
      "x-section-id": "Content"
    },
    {
      "name": "Supplier Contents",
      "description": "",
      "x-section-id": "Content"
    },
    {
      "name": "Document Schemas",
      "description": "\"Integration\" represents Document Schemas",
      "x-section-id": "Content"
    },
    {
      "name": "Documents",
      "description": "\"Integration\" represents Documents",
      "x-section-id": "Content"
    }
  ],
  "components": {
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "/oauth/token",
            "scopes": {
              "AddressAdmin": "",
              "AddressReader": "",
              "AdminAddressAdmin": "",
              "AdminAddressReader": "",
              "AdminUserAdmin": "",
              "AdminUserGroupAdmin": "",
              "AdminUserGroupReader": "",
              "AdminUserReader": "",
              "ApiClientAdmin": "",
              "ApiClientReader": "",
              "ApprovalRuleAdmin": "",
              "ApprovalRuleReader": "",
              "BuyerAdmin": "",
              "BuyerImpersonation": "",
              "BuyerReader": "",
              "BuyerUserAdmin": "",
              "BuyerUserReader": "",
              "CatalogAdmin": "",
              "CatalogReader": "",
              "CategoryAdmin": "",
              "CategoryReader": "",
              "CostCenterAdmin": "",
              "CostCenterReader": "",
              "CreditCardAdmin": "",
              "CreditCardReader": "",
              "FullAccess": "",
              "IncrementorAdmin": "",
              "IncrementorReader": "",
              "IntegrationEventAdmin": "",
              "IntegrationEventReader": "",
              "InventoryAdmin": "",
              "MeAddressAdmin": "",
              "MeAdmin": "",
              "MeCreditCardAdmin": "",
              "MessageConfigAssignmentAdmin": "",
              "MessageSenderAdmin": "",
              "MessageSenderReader": "",
              "MeXpAdmin": "",
              "OpenIDConnectAdmin": "",
              "OpenIDConnectReader": "",
              "OrderAdmin": "",
              "OrderReader": "",
              "OverrideShipping": "",
              "OverrideTax": "",
              "OverrideUnitPrice": "",
              "PasswordReset": "",
              "PriceScheduleAdmin": "",
              "PriceScheduleReader": "",
              "ProductAdmin": "",
              "ProductAssignmentAdmin": "",
              "ProductFacetAdmin": "",
              "ProductFacetReader": "",
              "ProductReader": "",
              "PromotionAdmin": "",
              "PromotionReader": "",
              "SecurityProfileAdmin": "",
              "SecurityProfileReader": "",
              "SetSecurityProfile": "",
              "ShipmentAdmin": "",
              "ShipmentReader": "",
              "Shopper": "",
              "SpendingAccountAdmin": "",
              "SpendingAccountReader": "",
              "SupplierAddressAdmin": "",
              "SupplierAddressReader": "",
              "SupplierAdmin": "",
              "SupplierReader": "",
              "SupplierUserAdmin": "",
              "SupplierUserGroupAdmin": "",
              "SupplierUserGroupReader": "",
              "SupplierUserReader": "",
              "UnsubmittedOrderReader": "",
              "UserGroupAdmin": "",
              "UserGroupReader": "",
              "WebhookAdmin": "",
              "WebhookReader": "",
              "XpIndexAdmin": ""
            }
          },
          "clientCredentials": {
            "tokenUrl": "/oauth/token",
            "scopes": {
              "AddressAdmin": "",
              "AddressReader": "",
              "AdminAddressAdmin": "",
              "AdminAddressReader": "",
              "AdminUserAdmin": "",
              "AdminUserGroupAdmin": "",
              "AdminUserGroupReader": "",
              "AdminUserReader": "",
              "ApiClientAdmin": "",
              "ApiClientReader": "",
              "ApprovalRuleAdmin": "",
              "ApprovalRuleReader": "",
              "BuyerAdmin": "",
              "BuyerImpersonation": "",
              "BuyerReader": "",
              "BuyerUserAdmin": "",
              "BuyerUserReader": "",
              "CatalogAdmin": "",
              "CatalogReader": "",
              "CategoryAdmin": "",
              "CategoryReader": "",
              "CostCenterAdmin": "",
              "CostCenterReader": "",
              "CreditCardAdmin": "",
              "CreditCardReader": "",
              "FullAccess": "",
              "IncrementorAdmin": "",
              "IncrementorReader": "",
              "IntegrationEventAdmin": "",
              "IntegrationEventReader": "",
              "InventoryAdmin": "",
              "MeAddressAdmin": "",
              "MeAdmin": "",
              "MeCreditCardAdmin": "",
              "MessageConfigAssignmentAdmin": "",
              "MessageSenderAdmin": "",
              "MessageSenderReader": "",
              "MeXpAdmin": "",
              "OpenIDConnectAdmin": "",
              "OpenIDConnectReader": "",
              "OrderAdmin": "",
              "OrderReader": "",
              "OverrideShipping": "",
              "OverrideTax": "",
              "OverrideUnitPrice": "",
              "PasswordReset": "",
              "PriceScheduleAdmin": "",
              "PriceScheduleReader": "",
              "ProductAdmin": "",
              "ProductAssignmentAdmin": "",
              "ProductFacetAdmin": "",
              "ProductFacetReader": "",
              "ProductReader": "",
              "PromotionAdmin": "",
              "PromotionReader": "",
              "SecurityProfileAdmin": "",
              "SecurityProfileReader": "",
              "SetSecurityProfile": "",
              "ShipmentAdmin": "",
              "ShipmentReader": "",
              "Shopper": "",
              "SpendingAccountAdmin": "",
              "SpendingAccountReader": "",
              "SupplierAddressAdmin": "",
              "SupplierAddressReader": "",
              "SupplierAdmin": "",
              "SupplierReader": "",
              "SupplierUserAdmin": "",
              "SupplierUserGroupAdmin": "",
              "SupplierUserGroupReader": "",
              "SupplierUserReader": "",
              "UnsubmittedOrderReader": "",
              "UserGroupAdmin": "",
              "UserGroupReader": "",
              "WebhookAdmin": "",
              "WebhookReader": "",
              "XpIndexAdmin": ""
            }
          }
        }
      }
    },
    "schemas": {
      "Address": {
        "type": "object",
        "example": {
          "ID": "",
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "CompanyName": "",
          "FirstName": "",
          "LastName": "",
          "Street1": "",
          "Street2": "",
          "City": "",
          "State": "",
          "Zip": "",
          "Country": "",
          "Phone": "",
          "AddressName": ""
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "CompanyName": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Street1": {
            "type": "string"
          },
          "Street2": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "AddressName": {
            "type": "string"
          }
        }
      },
      "ApiError": {
        "type": "object",
        "example": {
          "ErrorCode": "",
          "Message": ""
        },
        "properties": {
          "ErrorCode": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          }
        }
      },
      "Asset": {
        "type": "object",
        "example": {
          "ID": "",
          "Title": "",
          "Active": false,
          "Url": "",
          "Type": "Image",
          "Tags": [
            ""
          ],
          "FileName": "",
          "Metadata": {
            "IsUrlOverridden": false,
            "ContentType": "",
            "SizeBytes": 0,
            "ImageHeight": 0,
            "ImageWidth": 0,
            "ImageVerticalResolution": 0,
            "ImageHorizontalResolution": 0
          }
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "Title": {
            "type": "string",
            "maxLength": 100
          },
          "Active": {
            "type": "boolean"
          },
          "Url": {
            "type": "string"
          },
          "Type": {
            "enum": [
              "Image",
              "Theme",
              "Attachment",
              "Structured"
            ],
            "type": "string"
          },
          "Tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "FileName": {
            "type": "string"
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetMetadata"
              }
            ],
            "readOnly": true
          }
        }
      },
      "AssetForDelivery": {
        "type": "object",
        "example": {
          "ListOrderWithinType": 0,
          "ID": "",
          "Title": "",
          "Active": false,
          "Url": "",
          "Type": "Image",
          "Tags": [
            ""
          ],
          "FileName": "",
          "Metadata": {
            "IsUrlOverridden": false,
            "ContentType": "",
            "SizeBytes": 0,
            "ImageHeight": 0,
            "ImageWidth": 0,
            "ImageVerticalResolution": 0,
            "ImageHorizontalResolution": 0
          }
        },
        "properties": {
          "ListOrderWithinType": {
            "type": "integer",
            "format": "int32"
          },
          "ID": {
            "type": "string"
          },
          "Title": {
            "type": "string",
            "maxLength": 100
          },
          "Active": {
            "type": "boolean"
          },
          "Url": {
            "type": "string"
          },
          "Type": {
            "enum": [
              "Image",
              "Theme",
              "Attachment",
              "Structured"
            ],
            "type": "string"
          },
          "Tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "FileName": {
            "type": "string"
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetMetadata"
              }
            ],
            "readOnly": true
          }
        }
      },
      "AssetMetadata": {
        "type": "object",
        "example": {
          "IsUrlOverridden": false,
          "ContentType": "",
          "SizeBytes": 0,
          "ImageHeight": 0,
          "ImageWidth": 0,
          "ImageVerticalResolution": 0,
          "ImageHorizontalResolution": 0
        },
        "properties": {
          "IsUrlOverridden": {
            "type": "boolean"
          },
          "ContentType": {
            "type": "string"
          },
          "SizeBytes": {
            "type": "integer",
            "format": "int32"
          },
          "ImageHeight": {
            "type": "integer",
            "format": "int32"
          },
          "ImageWidth": {
            "type": "integer",
            "format": "int32"
          },
          "ImageVerticalResolution": {
            "type": "number",
            "format": "float"
          },
          "ImageHorizontalResolution": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "BuyerAddress": {
        "type": "object",
        "example": {
          "ID": "",
          "Shipping": false,
          "Billing": false,
          "Editable": false,
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "CompanyName": "",
          "FirstName": "",
          "LastName": "",
          "Street1": "",
          "Street2": "",
          "City": "",
          "State": "",
          "Zip": "",
          "Country": "",
          "Phone": "",
          "AddressName": ""
        },
        "properties": {
          "ID": {
            "type": "string",
            "readOnly": true
          },
          "Shipping": {
            "type": "boolean"
          },
          "Billing": {
            "type": "boolean"
          },
          "Editable": {
            "type": "boolean",
            "readOnly": true
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "CompanyName": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Street1": {
            "type": "string"
          },
          "Street2": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "AddressName": {
            "type": "string"
          }
        }
      },
      "BuyerAddressXP": {
        "type": "object",
        "example": {
          "Accessorials": [
            "DestinationInsideDelivery"
          ],
          "Email": "",
          "LocationID": "",
          "AvalaraCertificateID": 0,
          "AvalaraCertificateExpiration": "2018-01-01T00:00:00-06:00"
        },
        "properties": {
          "Accessorials": {
            "type": "string",
            "enum": [
              "DestinationInsideDelivery",
              "DestinationLiftGate",
              "LimitedAccessDelivery",
              "ResidentialDelivery"
            ],
            "items": {
              "type": "string"
            }
          },
          "Email": {
            "type": "string"
          },
          "LocationID": {
            "type": "string"
          },
          "AvalaraCertificateID": {
            "type": "integer",
            "format": "int32"
          },
          "AvalaraCertificateExpiration": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BuyerCreditCard": {
        "type": "object",
        "example": {
          "ID": "",
          "Editable": false,
          "Token": "",
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "CardType": "",
          "PartialAccountNumber": "",
          "CardholderName": "",
          "ExpirationDate": "2018-01-01T00:00:00-06:00"
        },
        "properties": {
          "ID": {
            "type": "string",
            "readOnly": true
          },
          "Editable": {
            "type": "boolean",
            "readOnly": true
          },
          "Token": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "CardType": {
            "type": "string"
          },
          "PartialAccountNumber": {
            "type": "string"
          },
          "CardholderName": {
            "type": "string"
          },
          "ExpirationDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BuyerMarkup": {
        "type": "object",
        "example": {
          "Percent": 0
        },
        "properties": {
          "Percent": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BuyerXp": {
        "type": "object",
        "example": {
          "MarkupPercent": 0
        },
        "properties": {
          "MarkupPercent": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CatalogXp": {
        "type": "object",
        "example": {
          "Type": ""
        },
        "properties": {
          "Type": {
            "type": "string"
          }
        }
      },
      "Contact": {
        "type": "object",
        "example": {
          "Name": "",
          "Email": "",
          "Phone": ""
        },
        "properties": {
          "Name": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          }
        }
      },
      "CostCenterXp": {
        "type": "object",
        "example": {},
        "properties": {}
      },
      "CreditCard": {
        "type": "object",
        "example": {
          "ID": "",
          "Token": "",
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "CardType": "",
          "PartialAccountNumber": "",
          "CardholderName": "",
          "ExpirationDate": "2018-01-01T00:00:00-06:00"
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "Token": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "CardType": {
            "type": "string"
          },
          "PartialAccountNumber": {
            "type": "string"
          },
          "CardholderName": {
            "type": "string"
          },
          "ExpirationDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Document": {
        "type": "object",
        "example": {
          "ID": "",
          "$schema": "",
          "Doc": {}
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "$schema": {
            "type": "string",
            "readOnly": true
          },
          "Doc": {
            "type": "object"
          }
        }
      },
      "DocumentSchema": {
        "type": "object",
        "example": {
          "ID": "",
          "RestrictedAssignmentTypes": [
            "Products"
          ],
          "Schema": {}
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "RestrictedAssignmentTypes": {
            "type": "string",
            "enum": [
              "Products",
              "Categories",
              "Catalogs",
              "Promotions",
              "Suppliers",
              "Buyers",
              "ProductFacets"
            ],
            "items": {
              "type": "string"
            }
          },
          "Schema": {
            "type": "object"
          }
        }
      },
      "Inventory": {
        "type": "object",
        "example": {
          "Enabled": false,
          "NotificationPoint": 0,
          "VariantLevelTracking": false,
          "OrderCanExceed": false,
          "QuantityAvailable": 0,
          "LastUpdated": "2018-01-01T00:00:00-06:00"
        },
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "NotificationPoint": {
            "type": "integer",
            "format": "int32"
          },
          "VariantLevelTracking": {
            "type": "boolean"
          },
          "OrderCanExceed": {
            "type": "boolean"
          },
          "QuantityAvailable": {
            "type": "integer",
            "format": "int32"
          },
          "LastUpdated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "LineItem": {
        "type": "object",
        "example": {
          "ID": "",
          "ProductID": "",
          "Quantity": 0,
          "DateAdded": "2018-01-01T00:00:00-06:00",
          "QuantityShipped": 0,
          "UnitPrice": 0,
          "PromotionDiscount": 0,
          "LineTotal": 0,
          "LineSubtotal": 0,
          "CostCenter": "",
          "DateNeeded": "2018-01-01T00:00:00-06:00",
          "ShippingAccount": "",
          "ShippingAddressID": "",
          "ShipFromAddressID": "",
          "Product": {
            "ID": "",
            "Name": "",
            "Description": "",
            "QuantityMultiplier": 0,
            "ShipWeight": 0,
            "ShipHeight": 0,
            "ShipWidth": 0,
            "ShipLength": 0
          },
          "Variant": {
            "ID": "",
            "Name": "",
            "Description": "",
            "ShipWeight": 0,
            "ShipHeight": 0,
            "ShipWidth": 0,
            "ShipLength": 0
          },
          "ShippingAddress": {
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          },
          "ShipFromAddress": {
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          },
          "SupplierID": "",
          "Specs": [
            {
              "SpecID": "",
              "Name": "",
              "OptionID": "",
              "Value": "",
              "PriceMarkupType": "NoMarkup",
              "PriceMarkup": 0
            }
          ]
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "ProductID": {
            "type": "string"
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "DateAdded": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "QuantityShipped": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "float"
          },
          "PromotionDiscount": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "LineTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "LineSubtotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "CostCenter": {
            "type": "string"
          },
          "DateNeeded": {
            "type": "string",
            "format": "date-time"
          },
          "ShippingAccount": {
            "type": "string"
          },
          "ShippingAddressID": {
            "type": "string"
          },
          "ShipFromAddressID": {
            "type": "string"
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemProduct"
              }
            ],
            "readOnly": true
          },
          "Variant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemVariant"
              }
            ],
            "readOnly": true
          },
          "ShippingAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "readOnly": true
          },
          "ShipFromAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "readOnly": true
          },
          "SupplierID": {
            "type": "string",
            "readOnly": true
          },
          "Specs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemSpec"
            }
          }
        }
      },
      "LineItemProduct": {
        "type": "object",
        "example": {
          "ID": "",
          "Name": "",
          "Description": "",
          "QuantityMultiplier": 0,
          "ShipWeight": 0,
          "ShipHeight": 0,
          "ShipWidth": 0,
          "ShipLength": 0
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "QuantityMultiplier": {
            "type": "integer",
            "format": "int32"
          },
          "ShipWeight": {
            "type": "number",
            "format": "float"
          },
          "ShipHeight": {
            "type": "number",
            "format": "float"
          },
          "ShipWidth": {
            "type": "number",
            "format": "float"
          },
          "ShipLength": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "LineItemReturnInfo": {
        "type": "object",
        "example": {
          "QuantityToReturn": 0,
          "ReturnReason": "",
          "Comment": "",
          "Resolved": false
        },
        "properties": {
          "QuantityToReturn": {
            "type": "integer",
            "format": "int32"
          },
          "ReturnReason": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "Resolved": {
            "type": "boolean"
          }
        }
      },
      "LineItemSpec": {
        "type": "object",
        "example": {
          "SpecID": "",
          "Name": "",
          "OptionID": "",
          "Value": "",
          "PriceMarkupType": "NoMarkup",
          "PriceMarkup": 0
        },
        "properties": {
          "SpecID": {
            "type": "string"
          },
          "Name": {
            "type": "string",
            "readOnly": true
          },
          "OptionID": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          },
          "PriceMarkupType": {
            "enum": [
              "NoMarkup",
              "AmountPerQuantity",
              "AmountTotal",
              "Percentage"
            ],
            "type": "string"
          },
          "PriceMarkup": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "LineItemVariant": {
        "type": "object",
        "example": {
          "ID": "",
          "Name": "",
          "Description": "",
          "ShipWeight": 0,
          "ShipHeight": 0,
          "ShipWidth": 0,
          "ShipLength": 0
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "ShipWeight": {
            "type": "number",
            "format": "float"
          },
          "ShipHeight": {
            "type": "number",
            "format": "float"
          },
          "ShipWidth": {
            "type": "number",
            "format": "float"
          },
          "ShipLength": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "LineItemXp": {
        "type": "object",
        "example": {
          "LineItemStatus": "Complete",
          "LineItemReturnInfo": {
            "QuantityToReturn": 0,
            "ReturnReason": "",
            "Comment": "",
            "Resolved": false
          },
          "LineItemImageUrl": "",
          "UnitPriceInProductCurrency": 0
        },
        "properties": {
          "LineItemStatus": {
            "enum": [
              "Complete",
              "Submitted",
              "Open",
              "Backordered",
              "Canceled",
              "Returned",
              "ReturnRequested"
            ],
            "type": "string"
          },
          "LineItemReturnInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemReturnInfo"
              }
            ]
          },
          "LineItemImageUrl": {
            "type": "string"
          },
          "UnitPriceInProductCurrency": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "ListAsset": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "ListAssetForDelivery": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetForDelivery"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "ListDocument": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "ListDocumentSchema": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSchema"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "ListFacet": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "XpPath": {
            "type": "string"
          },
          "Values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListFacetValue"
            }
          },
          "xp": {
            "type": "object"
          }
        }
      },
      "ListFacetValue": {
        "type": "object",
        "properties": {
          "Value": {
            "type": "string"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListMarketplaceCatalog": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceCatalog"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "ListMarketplaceCatalogAssignment": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceCatalogAssignment"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "ListMarketplaceUser": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceUser"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "ListOrchestrationLog": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrchestrationLog"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "ListOrder": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "ListOrderCloudIntegrationsConversionRate": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderCloudIntegrationsConversionRate"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "ListSuperMarketplaceProduct": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuperMarketplaceProduct"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "ListTaxCode": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxCode"
            }
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "MarketplaceAddressAssignment": {
        "type": "object",
        "example": {
          "ID": "",
          "AddressID": "",
          "UserID": "",
          "UserGroupID": "",
          "IsShipping": false,
          "IsBilling": false
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "AddressID": {
            "type": "string"
          },
          "UserID": {
            "type": "string"
          },
          "UserGroupID": {
            "type": "string"
          },
          "IsShipping": {
            "type": "boolean"
          },
          "IsBilling": {
            "type": "boolean"
          }
        }
      },
      "MarketplaceAddressBuyer": {
        "type": "object",
        "example": {
          "xp": {
            "Accessorials": [
              "DestinationInsideDelivery"
            ],
            "Email": "",
            "LocationID": "",
            "AvalaraCertificateID": 0,
            "AvalaraCertificateExpiration": "2018-01-01T00:00:00-06:00"
          },
          "ID": "",
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "CompanyName": "",
          "FirstName": "",
          "LastName": "",
          "Street1": "",
          "Street2": "",
          "City": "",
          "State": "",
          "Zip": "",
          "Country": "",
          "Phone": "",
          "AddressName": ""
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BuyerAddressXP"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "CompanyName": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Street1": {
            "type": "string"
          },
          "Street2": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "AddressName": {
            "type": "string"
          }
        }
      },
      "MarketplaceAddressSupplier": {
        "type": "object",
        "example": {
          "xp": {
            "Accessorials": [
              "LimitedAccessPickup"
            ]
          },
          "ID": "",
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "CompanyName": "",
          "FirstName": "",
          "LastName": "",
          "Street1": "",
          "Street2": "",
          "City": "",
          "State": "",
          "Zip": "",
          "Country": "",
          "Phone": "",
          "AddressName": ""
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupplierAddressXP"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "CompanyName": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Street1": {
            "type": "string"
          },
          "Street2": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "AddressName": {
            "type": "string"
          }
        }
      },
      "MarketplaceBuyer": {
        "type": "object",
        "example": {
          "xp": {
            "MarkupPercent": 0
          },
          "ID": "",
          "Name": "",
          "DefaultCatalogID": "",
          "Active": false,
          "DateCreated": "2018-01-01T00:00:00-06:00"
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BuyerXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "DefaultCatalogID": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "MarketplaceBuyerLocation": {
        "type": "object",
        "example": {
          "UserGroup": {
            "xp": {
              "Type": "",
              "Role": "",
              "Currency": "CAD",
              "Country": "",
              "CatalogAssignments": [
                ""
              ]
            },
            "ID": "",
            "Name": "",
            "Description": ""
          },
          "Address": {
            "xp": {
              "Accessorials": [
                "DestinationInsideDelivery"
              ],
              "Email": "",
              "LocationID": "",
              "AvalaraCertificateID": 0,
              "AvalaraCertificateExpiration": "2018-01-01T00:00:00-06:00"
            },
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          }
        },
        "properties": {
          "UserGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceLocationUserGroup"
              }
            ]
          },
          "Address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceAddressBuyer"
              }
            ]
          }
        }
      },
      "MarketplaceCatalog": {
        "type": "object",
        "example": {
          "xp": {
            "Type": ""
          },
          "ID": "",
          "Name": "",
          "Description": ""
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "MarketplaceCatalogAssignment": {
        "type": "object",
        "example": {
          "ID": "",
          "LocationID": "",
          "CatalogID": ""
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "LocationID": {
            "type": "string"
          },
          "CatalogID": {
            "type": "string"
          }
        }
      },
      "MarketplaceCatalogAssignmentRequest": {
        "type": "object",
        "example": {
          "CatalogIDs": [
            ""
          ]
        },
        "properties": {
          "CatalogIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MarketplaceCostCenter": {
        "type": "object",
        "example": {
          "xp": {},
          "ID": "",
          "Name": "",
          "Description": ""
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CostCenterXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "MarketplaceLineItem": {
        "type": "object",
        "example": {
          "xp": {
            "LineItemStatus": "Complete",
            "LineItemReturnInfo": {
              "QuantityToReturn": 0,
              "ReturnReason": "",
              "Comment": "",
              "Resolved": false
            },
            "LineItemImageUrl": "",
            "UnitPriceInProductCurrency": 0
          },
          "Product": {
            "xp": {
              "Status": "Draft",
              "HasVariants": false,
              "Note": "",
              "Tax": {
                "Category": "",
                "Code": "",
                "Description": ""
              },
              "UnitOfMeasure": {
                "Qty": 0,
                "Unit": ""
              },
              "ProductType": "Standard",
              "IsResale": false,
              "Accessorials": [
                "Freezable"
              ],
              "Currency": "CAD"
            },
            "ID": "",
            "Name": "",
            "Description": "",
            "QuantityMultiplier": 0,
            "ShipWeight": 0,
            "ShipHeight": 0,
            "ShipWidth": 0,
            "ShipLength": 0
          },
          "Variant": {
            "ID": "",
            "Name": "",
            "Description": "",
            "ShipWeight": 0,
            "ShipHeight": 0,
            "ShipWidth": 0,
            "ShipLength": 0
          },
          "ShippingAddress": {
            "xp": {
              "Accessorials": [
                "DestinationInsideDelivery"
              ],
              "Email": "",
              "LocationID": "",
              "AvalaraCertificateID": 0,
              "AvalaraCertificateExpiration": "2018-01-01T00:00:00-06:00"
            },
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          },
          "ShipFromAddress": {
            "xp": {
              "Accessorials": [
                "LimitedAccessPickup"
              ]
            },
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          },
          "ID": "",
          "ProductID": "",
          "Quantity": 0,
          "DateAdded": "2018-01-01T00:00:00-06:00",
          "QuantityShipped": 0,
          "UnitPrice": 0,
          "PromotionDiscount": 0,
          "LineTotal": 0,
          "LineSubtotal": 0,
          "CostCenter": "",
          "DateNeeded": "2018-01-01T00:00:00-06:00",
          "ShippingAccount": "",
          "ShippingAddressID": "",
          "ShipFromAddressID": "",
          "SupplierID": "",
          "Specs": [
            {
              "SpecID": "",
              "Name": "",
              "OptionID": "",
              "Value": "",
              "PriceMarkupType": "NoMarkup",
              "PriceMarkup": 0
            }
          ]
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemXp"
              }
            ]
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceLineItemProduct"
              }
            ],
            "readOnly": true
          },
          "Variant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemVariant"
              }
            ],
            "readOnly": true
          },
          "ShippingAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceAddressBuyer"
              }
            ],
            "readOnly": true
          },
          "ShipFromAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceAddressSupplier"
              }
            ],
            "readOnly": true
          },
          "ID": {
            "type": "string"
          },
          "ProductID": {
            "type": "string"
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "DateAdded": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "QuantityShipped": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "float"
          },
          "PromotionDiscount": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "LineTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "LineSubtotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "CostCenter": {
            "type": "string"
          },
          "DateNeeded": {
            "type": "string",
            "format": "date-time"
          },
          "ShippingAccount": {
            "type": "string"
          },
          "ShippingAddressID": {
            "type": "string"
          },
          "ShipFromAddressID": {
            "type": "string"
          },
          "SupplierID": {
            "type": "string",
            "readOnly": true
          },
          "Specs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemSpec"
            }
          }
        }
      },
      "MarketplaceLineItemProduct": {
        "type": "object",
        "example": {
          "xp": {
            "Status": "Draft",
            "HasVariants": false,
            "Note": "",
            "Tax": {
              "Category": "",
              "Code": "",
              "Description": ""
            },
            "UnitOfMeasure": {
              "Qty": 0,
              "Unit": ""
            },
            "ProductType": "Standard",
            "IsResale": false,
            "Accessorials": [
              "Freezable"
            ],
            "Currency": "CAD"
          },
          "ID": "",
          "Name": "",
          "Description": "",
          "QuantityMultiplier": 0,
          "ShipWeight": 0,
          "ShipHeight": 0,
          "ShipWidth": 0,
          "ShipLength": 0
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "QuantityMultiplier": {
            "type": "integer",
            "format": "int32"
          },
          "ShipWeight": {
            "type": "number",
            "format": "float"
          },
          "ShipHeight": {
            "type": "number",
            "format": "float"
          },
          "ShipWidth": {
            "type": "number",
            "format": "float"
          },
          "ShipLength": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "MarketplaceLocationUserGroup": {
        "type": "object",
        "example": {
          "xp": {
            "Type": "",
            "Role": "",
            "Currency": "CAD",
            "Country": "",
            "CatalogAssignments": [
              ""
            ]
          },
          "ID": "",
          "Name": "",
          "Description": ""
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceLocationUserGroupXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "MarketplaceLocationUserGroupXp": {
        "type": "object",
        "example": {
          "Type": "",
          "Role": "",
          "Currency": "CAD",
          "Country": "",
          "CatalogAssignments": [
            ""
          ]
        },
        "properties": {
          "Type": {
            "type": "string"
          },
          "Role": {
            "type": "string"
          },
          "Currency": {
            "enum": [
              "CAD",
              "HKD",
              "ISK",
              "PHP",
              "DKK",
              "HUF",
              "CZK",
              "GBP",
              "RON",
              "SEK",
              "IDR",
              "INR",
              "BRL",
              "RUB",
              "HRK",
              "JPY",
              "THB",
              "CHF",
              "EUR",
              "MYR",
              "BGN",
              "TRY",
              "CNY",
              "NOK",
              "NZD",
              "ZAR",
              "USD",
              "MXN",
              "SGD",
              "AUD",
              "ILS",
              "KRW",
              "PLN"
            ],
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "CatalogAssignments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MarketplaceOrder": {
        "type": "object",
        "example": {
          "xp": {
            "AvalaraTaxTransactionCode": "",
            "ShipFromAddressIDs": [
              ""
            ],
            "SupplierIDs": [
              ""
            ],
            "NeedsAttention": false,
            "StopShipSync": false,
            "OrderType": "Standard",
            "QuoteOrderInfo": {
              "FirstName": "",
              "LastName": "",
              "Phone": "",
              "Email": "",
              "Comments": ""
            },
            "OrderReturnInfo": {
              "HasReturn": false,
              "RMANumber": "",
              "Resolved": false
            },
            "Currency": "CAD",
            "ShippingStatus": "Shipped",
            "ClaimStatus": "NoClaim"
          },
          "FromUser": {
            "xp": {
              "Country": ""
            },
            "ID": "",
            "Username": "",
            "Password": "",
            "FirstName": "",
            "LastName": "",
            "Email": "",
            "Phone": "",
            "TermsAccepted": "2018-01-01T00:00:00-06:00",
            "Active": false,
            "AvailableRoles": [
              ""
            ],
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "PasswordLastSetDate": "2018-01-01T00:00:00-06:00"
          },
          "BillingAddress": {
            "xp": {
              "Accessorials": [
                "DestinationInsideDelivery"
              ],
              "Email": "",
              "LocationID": "",
              "AvalaraCertificateID": 0,
              "AvalaraCertificateExpiration": "2018-01-01T00:00:00-06:00"
            },
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          },
          "ID": "",
          "FromCompanyID": "",
          "ToCompanyID": "",
          "FromUserID": "",
          "BillingAddressID": "",
          "ShippingAddressID": "",
          "Comments": "",
          "LineItemCount": 0,
          "Status": "Unsubmitted",
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "DateSubmitted": "2018-01-01T00:00:00-06:00",
          "DateApproved": "2018-01-01T00:00:00-06:00",
          "DateDeclined": "2018-01-01T00:00:00-06:00",
          "DateCanceled": "2018-01-01T00:00:00-06:00",
          "DateCompleted": "2018-01-01T00:00:00-06:00",
          "Subtotal": 0,
          "ShippingCost": 0,
          "TaxCost": 0,
          "PromotionDiscount": 0,
          "Total": 0,
          "IsSubmitted": false
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderXp"
              }
            ]
          },
          "FromUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceUser"
              }
            ],
            "readOnly": true
          },
          "BillingAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceAddressBuyer"
              }
            ],
            "readOnly": true
          },
          "ID": {
            "type": "string"
          },
          "FromCompanyID": {
            "type": "string"
          },
          "ToCompanyID": {
            "type": "string"
          },
          "FromUserID": {
            "type": "string"
          },
          "BillingAddressID": {
            "type": "string"
          },
          "ShippingAddressID": {
            "type": "string"
          },
          "Comments": {
            "type": "string"
          },
          "LineItemCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Status": {
            "enum": [
              "Unsubmitted",
              "AwaitingApproval",
              "Declined",
              "Open",
              "Completed",
              "Canceled"
            ],
            "type": "string",
            "readOnly": true
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "DateSubmitted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "DateApproved": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "DateDeclined": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "DateCanceled": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "DateCompleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "Subtotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "ShippingCost": {
            "type": "number",
            "format": "float"
          },
          "TaxCost": {
            "type": "number",
            "format": "float"
          },
          "PromotionDiscount": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "Total": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "IsSubmitted": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "MarketplacePriceSchedule": {
        "type": "object",
        "example": {
          "xp": {},
          "ID": "",
          "Name": "",
          "ApplyTax": false,
          "ApplyShipping": false,
          "MinQuantity": 0,
          "MaxQuantity": 0,
          "UseCumulativeQuantity": false,
          "RestrictedQuantity": false,
          "PriceBreaks": [
            {
              "Quantity": 0,
              "Price": 0
            }
          ]
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceScheduleXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "ApplyTax": {
            "type": "boolean"
          },
          "ApplyShipping": {
            "type": "boolean"
          },
          "MinQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "MaxQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "UseCumulativeQuantity": {
            "type": "boolean"
          },
          "RestrictedQuantity": {
            "type": "boolean"
          },
          "PriceBreaks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceBreak"
            }
          }
        }
      },
      "MarketplaceProduct": {
        "type": "object",
        "example": {
          "xp": {
            "Status": "Draft",
            "HasVariants": false,
            "Note": "",
            "Tax": {
              "Category": "",
              "Code": "",
              "Description": ""
            },
            "UnitOfMeasure": {
              "Qty": 0,
              "Unit": ""
            },
            "ProductType": "Standard",
            "IsResale": false,
            "Accessorials": [
              "Freezable"
            ],
            "Currency": "CAD"
          },
          "OwnerID": "",
          "DefaultPriceScheduleID": "",
          "AutoForward": false,
          "ID": "",
          "Name": "",
          "Description": "",
          "QuantityMultiplier": 0,
          "ShipWeight": 0,
          "ShipHeight": 0,
          "ShipWidth": 0,
          "ShipLength": 0,
          "Active": false,
          "SpecCount": 0,
          "VariantCount": 0,
          "ShipFromAddressID": "",
          "Inventory": {
            "Enabled": false,
            "NotificationPoint": 0,
            "VariantLevelTracking": false,
            "OrderCanExceed": false,
            "QuantityAvailable": 0,
            "LastUpdated": "2018-01-01T00:00:00-06:00"
          },
          "DefaultSupplierID": ""
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductXp"
              }
            ]
          },
          "OwnerID": {
            "type": "string",
            "readOnly": true
          },
          "DefaultPriceScheduleID": {
            "type": "string"
          },
          "AutoForward": {
            "type": "boolean"
          },
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "QuantityMultiplier": {
            "type": "integer",
            "format": "int32"
          },
          "ShipWeight": {
            "type": "number",
            "format": "float"
          },
          "ShipHeight": {
            "type": "number",
            "format": "float"
          },
          "ShipWidth": {
            "type": "number",
            "format": "float"
          },
          "ShipLength": {
            "type": "number",
            "format": "float"
          },
          "Active": {
            "type": "boolean"
          },
          "SpecCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "VariantCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ShipFromAddressID": {
            "type": "string"
          },
          "Inventory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Inventory"
              }
            ]
          },
          "DefaultSupplierID": {
            "type": "string"
          }
        }
      },
      "MarketplaceProductAssignment": {
        "type": "object",
        "example": {
          "ID": "",
          "ProductID": "",
          "BuyerID": "",
          "UserGroupID": "",
          "PriceScheduleID": ""
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "ProductID": {
            "type": "string"
          },
          "BuyerID": {
            "type": "string"
          },
          "UserGroupID": {
            "type": "string"
          },
          "PriceScheduleID": {
            "type": "string"
          }
        }
      },
      "MarketplaceProductFacet": {
        "type": "object",
        "example": {
          "xp": {
            "Options": [
              ""
            ],
            "ParentID": ""
          },
          "ID": "",
          "Name": "",
          "XpPath": "",
          "ListOrder": 0,
          "MinCount": 0
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductFacetXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "XpPath": {
            "type": "string"
          },
          "ListOrder": {
            "type": "integer",
            "format": "int32"
          },
          "MinCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MarketplaceShipment": {
        "type": "object",
        "example": {
          "xp": {
            "FreightPopShipmentRate": {
              "Id": "",
              "Currency": "",
              "DiscountedCost": 0,
              "ListCost": 0,
              "Service": "",
              "TransitDays": ""
            },
            "Service": ""
          },
          "FromAddress": {
            "xp": {
              "Accessorials": [
                "LimitedAccessPickup"
              ]
            },
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          },
          "ToAddress": {
            "xp": {
              "Accessorials": [
                "DestinationInsideDelivery"
              ],
              "Email": "",
              "LocationID": "",
              "AvalaraCertificateID": 0,
              "AvalaraCertificateExpiration": "2018-01-01T00:00:00-06:00"
            },
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          },
          "ID": "",
          "BuyerID": "",
          "Shipper": "",
          "DateShipped": "2018-01-01T00:00:00-06:00",
          "DateDelivered": "2018-01-01T00:00:00-06:00",
          "TrackingNumber": "",
          "Cost": 0,
          "Account": "",
          "FromAddressID": "",
          "ToAddressID": ""
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShipmentXp"
              }
            ]
          },
          "FromAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceAddressSupplier"
              }
            ],
            "readOnly": true
          },
          "ToAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceAddressBuyer"
              }
            ],
            "readOnly": true
          },
          "ID": {
            "type": "string"
          },
          "BuyerID": {
            "type": "string"
          },
          "Shipper": {
            "type": "string"
          },
          "DateShipped": {
            "type": "string",
            "format": "date-time"
          },
          "DateDelivered": {
            "type": "string",
            "format": "date-time"
          },
          "TrackingNumber": {
            "type": "string"
          },
          "Cost": {
            "type": "number",
            "format": "float"
          },
          "Account": {
            "type": "string"
          },
          "FromAddressID": {
            "type": "string"
          },
          "ToAddressID": {
            "type": "string"
          }
        }
      },
      "MarketplaceShipmentItemWithLineItem": {
        "type": "object",
        "example": {
          "LineItem": {
            "ID": "",
            "ProductID": "",
            "Quantity": 0,
            "DateAdded": "2018-01-01T00:00:00-06:00",
            "QuantityShipped": 0,
            "UnitPrice": 0,
            "PromotionDiscount": 0,
            "LineTotal": 0,
            "LineSubtotal": 0,
            "CostCenter": "",
            "DateNeeded": "2018-01-01T00:00:00-06:00",
            "ShippingAccount": "",
            "ShippingAddressID": "",
            "ShipFromAddressID": "",
            "Product": {
              "ID": "",
              "Name": "",
              "Description": "",
              "QuantityMultiplier": 0,
              "ShipWeight": 0,
              "ShipHeight": 0,
              "ShipWidth": 0,
              "ShipLength": 0
            },
            "Variant": {
              "ID": "",
              "Name": "",
              "Description": "",
              "ShipWeight": 0,
              "ShipHeight": 0,
              "ShipWidth": 0,
              "ShipLength": 0
            },
            "ShippingAddress": {
              "ID": "",
              "DateCreated": "2018-01-01T00:00:00-06:00",
              "CompanyName": "",
              "FirstName": "",
              "LastName": "",
              "Street1": "",
              "Street2": "",
              "City": "",
              "State": "",
              "Zip": "",
              "Country": "",
              "Phone": "",
              "AddressName": ""
            },
            "ShipFromAddress": {
              "ID": "",
              "DateCreated": "2018-01-01T00:00:00-06:00",
              "CompanyName": "",
              "FirstName": "",
              "LastName": "",
              "Street1": "",
              "Street2": "",
              "City": "",
              "State": "",
              "Zip": "",
              "Country": "",
              "Phone": "",
              "AddressName": ""
            },
            "SupplierID": "",
            "Specs": [
              {
                "SpecID": "",
                "Name": "",
                "OptionID": "",
                "Value": "",
                "PriceMarkupType": "NoMarkup",
                "PriceMarkup": 0
              }
            ]
          },
          "OrderID": "",
          "LineItemID": "",
          "QuantityShipped": 0,
          "UnitPrice": 0,
          "CostCenter": "",
          "DateNeeded": "2018-01-01T00:00:00-06:00",
          "Product": {
            "ID": "",
            "Name": "",
            "Description": "",
            "QuantityMultiplier": 0,
            "ShipWeight": 0,
            "ShipHeight": 0,
            "ShipWidth": 0,
            "ShipLength": 0
          },
          "Variant": {
            "ID": "",
            "Name": "",
            "Description": "",
            "ShipWeight": 0,
            "ShipHeight": 0,
            "ShipWidth": 0,
            "ShipLength": 0
          },
          "Specs": [
            {
              "SpecID": "",
              "Name": "",
              "OptionID": "",
              "Value": "",
              "PriceMarkupType": "NoMarkup",
              "PriceMarkup": 0
            }
          ]
        },
        "properties": {
          "LineItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItem"
              }
            ]
          },
          "OrderID": {
            "type": "string"
          },
          "LineItemID": {
            "type": "string"
          },
          "QuantityShipped": {
            "type": "integer",
            "format": "int32"
          },
          "UnitPrice": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "CostCenter": {
            "type": "string",
            "readOnly": true
          },
          "DateNeeded": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemProduct"
              }
            ],
            "readOnly": true
          },
          "Variant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemVariant"
              }
            ],
            "readOnly": true
          },
          "Specs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemSpec"
            },
            "readOnly": true
          }
        }
      },
      "MarketplaceShipmentWithItems": {
        "type": "object",
        "example": {
          "ShipmentItems": [
            {
              "LineItem": {
                "ID": "",
                "ProductID": "",
                "Quantity": 0,
                "DateAdded": "2018-01-01T00:00:00-06:00",
                "QuantityShipped": 0,
                "UnitPrice": 0,
                "PromotionDiscount": 0,
                "LineTotal": 0,
                "LineSubtotal": 0,
                "CostCenter": "",
                "DateNeeded": "2018-01-01T00:00:00-06:00",
                "ShippingAccount": "",
                "ShippingAddressID": "",
                "ShipFromAddressID": "",
                "Product": {
                  "ID": "",
                  "Name": "",
                  "Description": "",
                  "QuantityMultiplier": 0,
                  "ShipWeight": 0,
                  "ShipHeight": 0,
                  "ShipWidth": 0,
                  "ShipLength": 0
                },
                "Variant": {
                  "ID": "",
                  "Name": "",
                  "Description": "",
                  "ShipWeight": 0,
                  "ShipHeight": 0,
                  "ShipWidth": 0,
                  "ShipLength": 0
                },
                "ShippingAddress": {
                  "ID": "",
                  "DateCreated": "2018-01-01T00:00:00-06:00",
                  "CompanyName": "",
                  "FirstName": "",
                  "LastName": "",
                  "Street1": "",
                  "Street2": "",
                  "City": "",
                  "State": "",
                  "Zip": "",
                  "Country": "",
                  "Phone": "",
                  "AddressName": ""
                },
                "ShipFromAddress": {
                  "ID": "",
                  "DateCreated": "2018-01-01T00:00:00-06:00",
                  "CompanyName": "",
                  "FirstName": "",
                  "LastName": "",
                  "Street1": "",
                  "Street2": "",
                  "City": "",
                  "State": "",
                  "Zip": "",
                  "Country": "",
                  "Phone": "",
                  "AddressName": ""
                },
                "SupplierID": "",
                "Specs": [
                  {
                    "SpecID": "",
                    "Name": "",
                    "OptionID": "",
                    "Value": "",
                    "PriceMarkupType": "NoMarkup",
                    "PriceMarkup": 0
                  }
                ]
              },
              "OrderID": "",
              "LineItemID": "",
              "QuantityShipped": 0,
              "UnitPrice": 0,
              "CostCenter": "",
              "DateNeeded": "2018-01-01T00:00:00-06:00",
              "Product": {
                "ID": "",
                "Name": "",
                "Description": "",
                "QuantityMultiplier": 0,
                "ShipWeight": 0,
                "ShipHeight": 0,
                "ShipWidth": 0,
                "ShipLength": 0
              },
              "Variant": {
                "ID": "",
                "Name": "",
                "Description": "",
                "ShipWeight": 0,
                "ShipHeight": 0,
                "ShipWidth": 0,
                "ShipLength": 0
              },
              "Specs": [
                {
                  "SpecID": "",
                  "Name": "",
                  "OptionID": "",
                  "Value": "",
                  "PriceMarkupType": "NoMarkup",
                  "PriceMarkup": 0
                }
              ]
            }
          ],
          "ID": "",
          "BuyerID": "",
          "Shipper": "",
          "DateShipped": "2018-01-01T00:00:00-06:00",
          "DateDelivered": "2018-01-01T00:00:00-06:00",
          "TrackingNumber": "",
          "Cost": 0,
          "Account": "",
          "FromAddressID": "",
          "ToAddressID": "",
          "FromAddress": {
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          },
          "ToAddress": {
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          }
        },
        "properties": {
          "ShipmentItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceShipmentItemWithLineItem"
            }
          },
          "ID": {
            "type": "string"
          },
          "BuyerID": {
            "type": "string"
          },
          "Shipper": {
            "type": "string"
          },
          "DateShipped": {
            "type": "string",
            "format": "date-time"
          },
          "DateDelivered": {
            "type": "string",
            "format": "date-time"
          },
          "TrackingNumber": {
            "type": "string"
          },
          "Cost": {
            "type": "number",
            "format": "float"
          },
          "Account": {
            "type": "string"
          },
          "FromAddressID": {
            "type": "string"
          },
          "ToAddressID": {
            "type": "string"
          },
          "FromAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "readOnly": true
          },
          "ToAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "readOnly": true
          }
        }
      },
      "MarketplaceSpec": {
        "type": "object",
        "example": {
          "ID": "",
          "ListOrder": 0,
          "Name": "",
          "DefaultValue": "",
          "Required": false,
          "AllowOpenText": false,
          "DefaultOptionID": "",
          "DefinesVariant": false,
          "OptionCount": 0,
          "Options": [
            {
              "ID": "",
              "Value": "",
              "ListOrder": 0,
              "IsOpenText": false,
              "PriceMarkupType": "NoMarkup",
              "PriceMarkup": 0
            }
          ]
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "ListOrder": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string"
          },
          "DefaultValue": {
            "type": "string"
          },
          "Required": {
            "type": "boolean"
          },
          "AllowOpenText": {
            "type": "boolean"
          },
          "DefaultOptionID": {
            "type": "string"
          },
          "DefinesVariant": {
            "type": "boolean"
          },
          "OptionCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecOption"
            },
            "readOnly": true
          }
        }
      },
      "MarketplaceSpecOption": {
        "type": "object",
        "example": {
          "xp": {
            "Description": "",
            "SpecID": ""
          },
          "ID": "",
          "Value": "",
          "ListOrder": 0,
          "IsOpenText": false,
          "PriceMarkupType": "NoMarkup",
          "PriceMarkup": 0
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SpecOptionXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          },
          "ListOrder": {
            "type": "integer",
            "format": "int32"
          },
          "IsOpenText": {
            "type": "boolean"
          },
          "PriceMarkupType": {
            "enum": [
              "NoMarkup",
              "AmountPerQuantity",
              "AmountTotal",
              "Percentage"
            ],
            "type": "string"
          },
          "PriceMarkup": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "MarketplaceSpecProductAssignment": {
        "type": "object",
        "example": {
          "ID": "",
          "SpecID": "",
          "ProductID": "",
          "DefaultValue": "",
          "DefaultOptionID": ""
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "SpecID": {
            "type": "string"
          },
          "ProductID": {
            "type": "string"
          },
          "DefaultValue": {
            "type": "string"
          },
          "DefaultOptionID": {
            "type": "string"
          }
        }
      },
      "MarketplaceSupplier": {
        "type": "object",
        "example": {
          "xp": {
            "Description": "",
            "SupportContact": {
              "Name": "",
              "Email": "",
              "Phone": ""
            },
            "SyncFreightPop": false,
            "ApiClientID": "",
            "Currency": "CAD"
          },
          "ID": "",
          "Name": "",
          "Active": false,
          "DateCreated": "2018-01-01T00:00:00-06:00"
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupplierXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "MarketplaceUser": {
        "type": "object",
        "example": {
          "xp": {
            "Country": ""
          },
          "ID": "",
          "Username": "",
          "Password": "",
          "FirstName": "",
          "LastName": "",
          "Email": "",
          "Phone": "",
          "TermsAccepted": "2018-01-01T00:00:00-06:00",
          "Active": false,
          "AvailableRoles": [
            ""
          ],
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "PasswordLastSetDate": "2018-01-01T00:00:00-06:00"
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Username": {
            "type": "string"
          },
          "Password": {
            "type": "string",
            "format": "password"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "TermsAccepted": {
            "type": "string",
            "format": "date-time"
          },
          "Active": {
            "type": "boolean"
          },
          "AvailableRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "PasswordLastSetDate": {
            "type": "string",
            "format": "password",
            "readOnly": true
          }
        }
      },
      "MarketplaceUserGroup": {
        "type": "object",
        "example": {
          "xp": {
            "Type": "",
            "Role": ""
          },
          "ID": "",
          "Name": "",
          "Description": ""
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGroupXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "MarketplaceUserGroupAssignment": {
        "type": "object",
        "example": {
          "ID": "",
          "UserGroupID": "",
          "UserID": ""
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "UserGroupID": {
            "type": "string"
          },
          "UserID": {
            "type": "string"
          }
        }
      },
      "MarketplaceVariant": {
        "type": "object",
        "example": {
          "xp": {
            "SpecCombo": "",
            "SpecValues": [
              {
                "SpecName": "",
                "SpecOptionValue": "",
                "PriceMarkup": ""
              }
            ],
            "NewID": ""
          },
          "ID": "",
          "Name": "",
          "Description": "",
          "Active": false,
          "ShipWeight": 0,
          "ShipHeight": 0,
          "ShipWidth": 0,
          "ShipLength": 0,
          "Inventory": {
            "QuantityAvailable": 0,
            "LastUpdated": "2018-01-01T00:00:00-06:00"
          },
          "Specs": [
            {
              "SpecID": "",
              "Name": "",
              "OptionID": "",
              "Value": "",
              "PriceMarkupType": "NoMarkup",
              "PriceMarkup": 0
            }
          ]
        },
        "properties": {
          "xp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceVariantXp"
              }
            ]
          },
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "ShipWeight": {
            "type": "number",
            "format": "float"
          },
          "ShipHeight": {
            "type": "number",
            "format": "float"
          },
          "ShipWidth": {
            "type": "number",
            "format": "float"
          },
          "ShipLength": {
            "type": "number",
            "format": "float"
          },
          "Inventory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VariantInventory"
              }
            ]
          },
          "Specs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantSpec"
            },
            "readOnly": true
          }
        }
      },
      "MarketplaceVariantXp": {
        "type": "object",
        "example": {
          "SpecCombo": "",
          "SpecValues": [
            {
              "SpecName": "",
              "SpecOptionValue": "",
              "PriceMarkup": ""
            }
          ],
          "NewID": ""
        },
        "properties": {
          "SpecCombo": {
            "type": "string"
          },
          "SpecValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecValue"
            }
          },
          "NewID": {
            "type": "string"
          }
        }
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Page": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalCount": {
            "type": "integer",
            "format": "int32"
          },
          "TotalPages": {
            "type": "integer",
            "format": "int32"
          },
          "ItemRange": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "MetaWithFacets": {
        "type": "object",
        "properties": {
          "Facets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListFacet"
            }
          },
          "Page": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalCount": {
            "type": "integer",
            "format": "int32"
          },
          "TotalPages": {
            "type": "integer",
            "format": "int32"
          },
          "ItemRange": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "OrchestrationLog": {
        "type": "object",
        "example": {
          "ErrorType": "WorkItemDefinition",
          "Message": "",
          "Level": "Progress",
          "ResourceId": "",
          "RecordId": "",
          "RecordType": "Product",
          "Action": "Ignore",
          "OrderCloudErrors": [
            {
              "ErrorCode": "",
              "Message": ""
            }
          ]
        },
        "properties": {
          "ErrorType": {
            "enum": [
              "WorkItemDefinition",
              "QueuedGetError",
              "CachedGetError",
              "DiffCalculationError",
              "ActionEvaluationError",
              "CacheUpdateError",
              "QueueCleanupError",
              "SyncCommandError",
              "CreateExistsError",
              "CreateGeneralError",
              "UpdateGeneralError",
              "PatchGeneralError",
              "GetGeneralError",
              "AuthenticateSupplierError",
              "FreightPopAuthenticateError",
              "GetOrdersNeedingShipmentError",
              "GetShipmentSyncOrders",
              "GetShipmentDetailsForShipmentSyncOrders",
              "CreateShipmentsInOrderCloudIfNeeded",
              "GetFreightPopShipments",
              "NoRelatedOrderCloudOrderFound",
              "ShipmentOrderIDParsingError"
            ],
            "type": "string"
          },
          "Message": {
            "type": "string"
          },
          "Level": {
            "enum": [
              "Progress",
              "Error",
              "Warn",
              "Success"
            ],
            "type": "string"
          },
          "ResourceId": {
            "type": "string"
          },
          "RecordId": {
            "type": "string"
          },
          "RecordType": {
            "enum": [
              "Product",
              "PriceSchedule",
              "Spec",
              "SpecOption",
              "SpecProductAssignment",
              "ProductFacet",
              "Buyer",
              "User",
              "UserGroup",
              "Address",
              "CostCenter",
              "UserGroupAssignment",
              "AddressAssignment",
              "CatalogAssignment",
              "Catalog",
              "Supplier",
              "Order"
            ],
            "type": "string"
          },
          "Action": {
            "enum": [
              "Ignore",
              "Create",
              "Update",
              "Patch",
              "Delete",
              "Get",
              "SyncShipments"
            ],
            "type": "string"
          },
          "OrderCloudErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "example": {
          "ID": "",
          "FromUser": {
            "ID": "",
            "Username": "",
            "Password": "",
            "FirstName": "",
            "LastName": "",
            "Email": "",
            "Phone": "",
            "TermsAccepted": "2018-01-01T00:00:00-06:00",
            "Active": false,
            "AvailableRoles": [
              ""
            ],
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "PasswordLastSetDate": "2018-01-01T00:00:00-06:00"
          },
          "FromCompanyID": "",
          "ToCompanyID": "",
          "FromUserID": "",
          "BillingAddressID": "",
          "BillingAddress": {
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          },
          "ShippingAddressID": "",
          "Comments": "",
          "LineItemCount": 0,
          "Status": "Unsubmitted",
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "DateSubmitted": "2018-01-01T00:00:00-06:00",
          "DateApproved": "2018-01-01T00:00:00-06:00",
          "DateDeclined": "2018-01-01T00:00:00-06:00",
          "DateCanceled": "2018-01-01T00:00:00-06:00",
          "DateCompleted": "2018-01-01T00:00:00-06:00",
          "Subtotal": 0,
          "ShippingCost": 0,
          "TaxCost": 0,
          "PromotionDiscount": 0,
          "Total": 0,
          "IsSubmitted": false
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "FromUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "readOnly": true
          },
          "FromCompanyID": {
            "type": "string"
          },
          "ToCompanyID": {
            "type": "string"
          },
          "FromUserID": {
            "type": "string"
          },
          "BillingAddressID": {
            "type": "string"
          },
          "BillingAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "readOnly": true
          },
          "ShippingAddressID": {
            "type": "string"
          },
          "Comments": {
            "type": "string"
          },
          "LineItemCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Status": {
            "enum": [
              "Unsubmitted",
              "AwaitingApproval",
              "Declined",
              "Open",
              "Completed",
              "Canceled"
            ],
            "type": "string",
            "readOnly": true
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "DateSubmitted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "DateApproved": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "DateDeclined": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "DateCanceled": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "DateCompleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "Subtotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "ShippingCost": {
            "type": "number",
            "format": "float"
          },
          "TaxCost": {
            "type": "number",
            "format": "float"
          },
          "PromotionDiscount": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "Total": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "IsSubmitted": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "OrderApproval": {
        "type": "object",
        "example": {
          "ApprovalRuleID": "",
          "ApprovingGroupID": "",
          "Status": "Pending",
          "AllowResubmit": false,
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "DateCompleted": "2018-01-01T00:00:00-06:00",
          "Approver": {
            "ID": "",
            "Username": "",
            "Password": "",
            "FirstName": "",
            "LastName": "",
            "Email": "",
            "Phone": "",
            "TermsAccepted": "2018-01-01T00:00:00-06:00",
            "Active": false,
            "AvailableRoles": [
              ""
            ],
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "PasswordLastSetDate": "2018-01-01T00:00:00-06:00"
          },
          "Comments": ""
        },
        "properties": {
          "ApprovalRuleID": {
            "type": "string",
            "readOnly": true
          },
          "ApprovingGroupID": {
            "type": "string",
            "readOnly": true
          },
          "Status": {
            "enum": [
              "Pending",
              "Approved",
              "Declined"
            ],
            "type": "string",
            "readOnly": true
          },
          "AllowResubmit": {
            "type": "boolean",
            "readOnly": true
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "DateCompleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "Approver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "readOnly": true
          },
          "Comments": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "OrderCloudIntegrationsConversionRate": {
        "type": "object",
        "example": {
          "Currency": "CAD",
          "Symbol": "",
          "Name": "",
          "Rate": 0,
          "Icon": ""
        },
        "properties": {
          "Currency": {
            "enum": [
              "CAD",
              "HKD",
              "ISK",
              "PHP",
              "DKK",
              "HUF",
              "CZK",
              "GBP",
              "RON",
              "SEK",
              "IDR",
              "INR",
              "BRL",
              "RUB",
              "HRK",
              "JPY",
              "THB",
              "CHF",
              "EUR",
              "MYR",
              "BGN",
              "TRY",
              "CNY",
              "NOK",
              "NZD",
              "ZAR",
              "USD",
              "MXN",
              "SGD",
              "AUD",
              "ILS",
              "KRW",
              "PLN"
            ],
            "type": "string"
          },
          "Symbol": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Rate": {
            "type": "number",
            "format": "double"
          },
          "Icon": {
            "type": "string"
          }
        }
      },
      "OrderCloudIntegrationsCreditCardPayment": {
        "type": "object",
        "example": {
          "OrderID": "",
          "PaymentID": "",
          "CreditCardID": "",
          "CreditCardDetails": {
            "AccountNumber": "",
            "ExpirationDate": "",
            "CardholderName": "",
            "CardType": "",
            "CCBillingAddress": {
              "ID": "",
              "DateCreated": "2018-01-01T00:00:00-06:00",
              "CompanyName": "",
              "FirstName": "",
              "LastName": "",
              "Street1": "",
              "Street2": "",
              "City": "",
              "State": "",
              "Zip": "",
              "Country": "",
              "Phone": "",
              "AddressName": ""
            }
          },
          "Currency": "",
          "CVV": "",
          "MerchantID": ""
        },
        "properties": {
          "OrderID": {
            "type": "string"
          },
          "PaymentID": {
            "type": "string"
          },
          "CreditCardID": {
            "type": "string"
          },
          "CreditCardDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderCloudIntegrationsCreditCardToken"
              }
            ]
          },
          "Currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3
          },
          "CVV": {
            "type": "string",
            "maxLength": 4,
            "minLength": 3
          },
          "MerchantID": {
            "type": "string"
          }
        }
      },
      "OrderCloudIntegrationsCreditCardToken": {
        "type": "object",
        "example": {
          "AccountNumber": "",
          "ExpirationDate": "",
          "CardholderName": "",
          "CardType": "",
          "CCBillingAddress": {
            "ID": "",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "CompanyName": "",
            "FirstName": "",
            "LastName": "",
            "Street1": "",
            "Street2": "",
            "City": "",
            "State": "",
            "Zip": "",
            "Country": "",
            "Phone": "",
            "AddressName": ""
          }
        },
        "properties": {
          "AccountNumber": {
            "type": "string"
          },
          "ExpirationDate": {
            "type": "string",
            "maxLength": 6,
            "minLength": 4
          },
          "CardholderName": {
            "type": "string"
          },
          "CardType": {
            "type": "string"
          },
          "CCBillingAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          }
        }
      },
      "OrderDetails": {
        "type": "object",
        "example": {
          "Order": {
            "xp": {
              "AvalaraTaxTransactionCode": "",
              "ShipFromAddressIDs": [
                ""
              ],
              "SupplierIDs": [
                ""
              ],
              "NeedsAttention": false,
              "StopShipSync": false,
              "OrderType": "Standard",
              "QuoteOrderInfo": {
                "FirstName": "",
                "LastName": "",
                "Phone": "",
                "Email": "",
                "Comments": ""
              },
              "OrderReturnInfo": {
                "HasReturn": false,
                "RMANumber": "",
                "Resolved": false
              },
              "Currency": "CAD",
              "ShippingStatus": "Shipped",
              "ClaimStatus": "NoClaim"
            },
            "FromUser": {
              "xp": {
                "Country": ""
              },
              "ID": "",
              "Username": "",
              "Password": "",
              "FirstName": "",
              "LastName": "",
              "Email": "",
              "Phone": "",
              "TermsAccepted": "2018-01-01T00:00:00-06:00",
              "Active": false,
              "AvailableRoles": [
                ""
              ],
              "DateCreated": "2018-01-01T00:00:00-06:00",
              "PasswordLastSetDate": "2018-01-01T00:00:00-06:00"
            },
            "BillingAddress": {
              "xp": {
                "Accessorials": [
                  "DestinationInsideDelivery"
                ],
                "Email": "",
                "LocationID": "",
                "AvalaraCertificateID": 0,
                "AvalaraCertificateExpiration": "2018-01-01T00:00:00-06:00"
              },
              "ID": "",
              "DateCreated": "2018-01-01T00:00:00-06:00",
              "CompanyName": "",
              "FirstName": "",
              "LastName": "",
              "Street1": "",
              "Street2": "",
              "City": "",
              "State": "",
              "Zip": "",
              "Country": "",
              "Phone": "",
              "AddressName": ""
            },
            "ID": "",
            "FromCompanyID": "",
            "ToCompanyID": "",
            "FromUserID": "",
            "BillingAddressID": "",
            "ShippingAddressID": "",
            "Comments": "",
            "LineItemCount": 0,
            "Status": "Unsubmitted",
            "DateCreated": "2018-01-01T00:00:00-06:00",
            "DateSubmitted": "2018-01-01T00:00:00-06:00",
            "DateApproved": "2018-01-01T00:00:00-06:00",
            "DateDeclined": "2018-01-01T00:00:00-06:00",
            "DateCanceled": "2018-01-01T00:00:00-06:00",
            "DateCompleted": "2018-01-01T00:00:00-06:00",
            "Subtotal": 0,
            "ShippingCost": 0,
            "TaxCost": 0,
            "PromotionDiscount": 0,
            "Total": 0,
            "IsSubmitted": false
          },
          "LineItems": [
            {
              "ID": "",
              "ProductID": "",
              "Quantity": 0,
              "DateAdded": "2018-01-01T00:00:00-06:00",
              "QuantityShipped": 0,
              "UnitPrice": 0,
              "PromotionDiscount": 0,
              "LineTotal": 0,
              "LineSubtotal": 0,
              "CostCenter": "",
              "DateNeeded": "2018-01-01T00:00:00-06:00",
              "ShippingAccount": "",
              "ShippingAddressID": "",
              "ShipFromAddressID": "",
              "Product": {
                "ID": "",
                "Name": "",
                "Description": "",
                "QuantityMultiplier": 0,
                "ShipWeight": 0,
                "ShipHeight": 0,
                "ShipWidth": 0,
                "ShipLength": 0
              },
              "Variant": {
                "ID": "",
                "Name": "",
                "Description": "",
                "ShipWeight": 0,
                "ShipHeight": 0,
                "ShipWidth": 0,
                "ShipLength": 0
              },
              "ShippingAddress": {
                "ID": "",
                "DateCreated": "2018-01-01T00:00:00-06:00",
                "CompanyName": "",
                "FirstName": "",
                "LastName": "",
                "Street1": "",
                "Street2": "",
                "City": "",
                "State": "",
                "Zip": "",
                "Country": "",
                "Phone": "",
                "AddressName": ""
              },
              "ShipFromAddress": {
                "ID": "",
                "DateCreated": "2018-01-01T00:00:00-06:00",
                "CompanyName": "",
                "FirstName": "",
                "LastName": "",
                "Street1": "",
                "Street2": "",
                "City": "",
                "State": "",
                "Zip": "",
                "Country": "",
                "Phone": "",
                "AddressName": ""
              },
              "SupplierID": "",
              "Specs": [
                {
                  "SpecID": "",
                  "Name": "",
                  "OptionID": "",
                  "Value": "",
                  "PriceMarkupType": "NoMarkup",
                  "PriceMarkup": 0
                }
              ]
            }
          ],
          "Promotions": [
            {
              "Amount": 0,
              "LineItemID": "",
              "ID": "",
              "LineItemLevel": false,
              "Code": "",
              "Name": "",
              "RedemptionLimit": 0,
              "RedemptionLimitPerUser": 0,
              "RedemptionCount": 0,
              "Description": "",
              "FinePrint": "",
              "StartDate": "2018-01-01T00:00:00-06:00",
              "ExpirationDate": "2018-01-01T00:00:00-06:00",
              "EligibleExpression": "",
              "ValueExpression": "",
              "CanCombine": false,
              "AllowAllBuyers": false
            }
          ],
          "Payments": [
            {
              "ID": "",
              "Type": "PurchaseOrder",
              "DateCreated": "2018-01-01T00:00:00-06:00",
              "CreditCardID": "",
              "SpendingAccountID": "",
              "Description": "",
              "Amount": 0,
              "Accepted": false,
              "Transactions": [
                {
                  "ID": "",
                  "Type": "",
                  "DateExecuted": "2018-01-01T00:00:00-06:00",
                  "Amount": 0,
                  "Succeeded": false,
                  "ResultCode": "",
                  "ResultMessage": ""
                }
              ]
            }
          ],
          "Approvals": [
            {
              "ApprovalRuleID": "",
              "ApprovingGroupID": "",
              "Status": "Pending",
              "AllowResubmit": false,
              "DateCreated": "2018-01-01T00:00:00-06:00",
              "DateCompleted": "2018-01-01T00:00:00-06:00",
              "Approver": {
                "ID": "",
                "Username": "",
                "Password": "",
                "FirstName": "",
                "LastName": "",
                "Email": "",
                "Phone": "",
                "TermsAccepted": "2018-01-01T00:00:00-06:00",
                "Active": false,
                "AvailableRoles": [
                  ""
                ],
                "DateCreated": "2018-01-01T00:00:00-06:00",
                "PasswordLastSetDate": "2018-01-01T00:00:00-06:00"
              },
              "Comments": ""
            }
          ]
        },
        "properties": {
          "Order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceOrder"
              }
            ]
          },
          "LineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "Promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPromotion"
            }
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "Approvals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderApproval"
            }
          }
        }
      },
      "OrderPromotion": {
        "type": "object",
        "example": {
          "Amount": 0,
          "LineItemID": "",
          "ID": "",
          "LineItemLevel": false,
          "Code": "",
          "Name": "",
          "RedemptionLimit": 0,
          "RedemptionLimitPerUser": 0,
          "RedemptionCount": 0,
          "Description": "",
          "FinePrint": "",
          "StartDate": "2018-01-01T00:00:00-06:00",
          "ExpirationDate": "2018-01-01T00:00:00-06:00",
          "EligibleExpression": "",
          "ValueExpression": "",
          "CanCombine": false,
          "AllowAllBuyers": false
        },
        "properties": {
          "Amount": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "LineItemID": {
            "type": "string",
            "readOnly": true
          },
          "ID": {
            "type": "string"
          },
          "LineItemLevel": {
            "type": "boolean"
          },
          "Code": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "RedemptionLimit": {
            "type": "integer",
            "format": "int32"
          },
          "RedemptionLimitPerUser": {
            "type": "integer",
            "format": "int32"
          },
          "RedemptionCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Description": {
            "type": "string"
          },
          "FinePrint": {
            "type": "string"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "ExpirationDate": {
            "type": "string",
            "format": "date-time"
          },
          "EligibleExpression": {
            "type": "string"
          },
          "ValueExpression": {
            "type": "string"
          },
          "CanCombine": {
            "type": "boolean"
          },
          "AllowAllBuyers": {
            "type": "boolean"
          }
        }
      },
      "OrderReturnInfo": {
        "type": "object",
        "example": {
          "HasReturn": false,
          "RMANumber": "",
          "Resolved": false
        },
        "properties": {
          "HasReturn": {
            "type": "boolean"
          },
          "RMANumber": {
            "type": "string"
          },
          "Resolved": {
            "type": "boolean"
          }
        }
      },
      "OrderXp": {
        "type": "object",
        "example": {
          "AvalaraTaxTransactionCode": "",
          "ShipFromAddressIDs": [
            ""
          ],
          "SupplierIDs": [
            ""
          ],
          "NeedsAttention": false,
          "StopShipSync": false,
          "OrderType": "Standard",
          "QuoteOrderInfo": {
            "FirstName": "",
            "LastName": "",
            "Phone": "",
            "Email": "",
            "Comments": ""
          },
          "OrderReturnInfo": {
            "HasReturn": false,
            "RMANumber": "",
            "Resolved": false
          },
          "Currency": "CAD",
          "ShippingStatus": "Shipped",
          "ClaimStatus": "NoClaim"
        },
        "properties": {
          "AvalaraTaxTransactionCode": {
            "type": "string"
          },
          "ShipFromAddressIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "SupplierIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "NeedsAttention": {
            "type": "boolean"
          },
          "StopShipSync": {
            "type": "boolean"
          },
          "OrderType": {
            "enum": [
              "Standard",
              "Quote"
            ],
            "type": "string"
          },
          "QuoteOrderInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuoteOrderInfo"
              }
            ]
          },
          "OrderReturnInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderReturnInfo"
              }
            ]
          },
          "Currency": {
            "enum": [
              "CAD",
              "HKD",
              "ISK",
              "PHP",
              "DKK",
              "HUF",
              "CZK",
              "GBP",
              "RON",
              "SEK",
              "IDR",
              "INR",
              "BRL",
              "RUB",
              "HRK",
              "JPY",
              "THB",
              "CHF",
              "EUR",
              "MYR",
              "BGN",
              "TRY",
              "CNY",
              "NOK",
              "NZD",
              "ZAR",
              "USD",
              "MXN",
              "SGD",
              "AUD",
              "ILS",
              "KRW",
              "PLN"
            ],
            "type": "string"
          },
          "ShippingStatus": {
            "enum": [
              "Shipped",
              "PartiallyShipped",
              "Canceled",
              "Processing",
              "Backordered"
            ],
            "type": "string"
          },
          "ClaimStatus": {
            "enum": [
              "NoClaim",
              "Pending",
              "Complete"
            ],
            "type": "string"
          }
        }
      },
      "Payment": {
        "type": "object",
        "example": {
          "ID": "",
          "Type": "PurchaseOrder",
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "CreditCardID": "",
          "SpendingAccountID": "",
          "Description": "",
          "Amount": 0,
          "Accepted": false,
          "Transactions": [
            {
              "ID": "",
              "Type": "",
              "DateExecuted": "2018-01-01T00:00:00-06:00",
              "Amount": 0,
              "Succeeded": false,
              "ResultCode": "",
              "ResultMessage": ""
            }
          ]
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "Type": {
            "enum": [
              "PurchaseOrder",
              "CreditCard",
              "SpendingAccount"
            ],
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "CreditCardID": {
            "type": "string"
          },
          "SpendingAccountID": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Amount": {
            "type": "number",
            "format": "float"
          },
          "Accepted": {
            "type": "boolean"
          },
          "Transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentTransaction"
            },
            "readOnly": true
          }
        }
      },
      "PaymentTransaction": {
        "type": "object",
        "example": {
          "ID": "",
          "Type": "",
          "DateExecuted": "2018-01-01T00:00:00-06:00",
          "Amount": 0,
          "Succeeded": false,
          "ResultCode": "",
          "ResultMessage": ""
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "DateExecuted": {
            "type": "string",
            "format": "date-time"
          },
          "Amount": {
            "type": "number",
            "format": "float"
          },
          "Succeeded": {
            "type": "boolean"
          },
          "ResultCode": {
            "type": "string"
          },
          "ResultMessage": {
            "type": "string"
          }
        }
      },
      "PriceBreak": {
        "type": "object",
        "example": {
          "Quantity": 0,
          "Price": 0
        },
        "properties": {
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "Price": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "PriceSchedule": {
        "type": "object",
        "example": {
          "ID": "",
          "Name": "",
          "ApplyTax": false,
          "ApplyShipping": false,
          "MinQuantity": 0,
          "MaxQuantity": 0,
          "UseCumulativeQuantity": false,
          "RestrictedQuantity": false,
          "PriceBreaks": [
            {
              "Quantity": 0,
              "Price": 0
            }
          ]
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "ApplyTax": {
            "type": "boolean"
          },
          "ApplyShipping": {
            "type": "boolean"
          },
          "MinQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "MaxQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "UseCumulativeQuantity": {
            "type": "boolean"
          },
          "RestrictedQuantity": {
            "type": "boolean"
          },
          "PriceBreaks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceBreak"
            }
          }
        }
      },
      "PriceScheduleXp": {
        "type": "object",
        "example": {},
        "properties": {}
      },
      "ProductFacetXp": {
        "type": "object",
        "example": {
          "Options": [
            ""
          ],
          "ParentID": ""
        },
        "properties": {
          "Options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ParentID": {
            "type": "string"
          }
        }
      },
      "ProductXp": {
        "type": "object",
        "example": {
          "Status": "Draft",
          "HasVariants": false,
          "Note": "",
          "Tax": {
            "Category": "",
            "Code": "",
            "Description": ""
          },
          "UnitOfMeasure": {
            "Qty": 0,
            "Unit": ""
          },
          "ProductType": "Standard",
          "IsResale": false,
          "Accessorials": [
            "Freezable"
          ],
          "Currency": "CAD"
        },
        "properties": {
          "Status": {
            "enum": [
              "Draft",
              "Published"
            ],
            "type": "string"
          },
          "HasVariants": {
            "type": "boolean"
          },
          "Note": {
            "type": "string",
            "maxLength": 500
          },
          "Tax": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxProperties"
              }
            ]
          },
          "UnitOfMeasure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitOfMeasure"
              }
            ]
          },
          "ProductType": {
            "enum": [
              "Standard",
              "Quote",
              "PurchaseOrder"
            ],
            "type": "string"
          },
          "IsResale": {
            "type": "boolean"
          },
          "Accessorials": {
            "type": "string",
            "enum": [
              "Freezable",
              "Hazmat",
              "KeepFromFreezing"
            ],
            "items": {
              "type": "string"
            }
          },
          "Currency": {
            "enum": [
              "CAD",
              "HKD",
              "ISK",
              "PHP",
              "DKK",
              "HUF",
              "CZK",
              "GBP",
              "RON",
              "SEK",
              "IDR",
              "INR",
              "BRL",
              "RUB",
              "HRK",
              "JPY",
              "THB",
              "CHF",
              "EUR",
              "MYR",
              "BGN",
              "TRY",
              "CNY",
              "NOK",
              "NZD",
              "ZAR",
              "USD",
              "MXN",
              "SGD",
              "AUD",
              "ILS",
              "KRW",
              "PLN"
            ],
            "type": "string"
          }
        }
      },
      "QuoteOrderInfo": {
        "type": "object",
        "example": {
          "FirstName": "",
          "LastName": "",
          "Phone": "",
          "Email": "",
          "Comments": ""
        },
        "properties": {
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Comments": {
            "type": "string",
            "maxLength": 200
          }
        }
      },
      "ShipmentCreateResponse": {
        "type": "object",
        "example": {
          "Shipment": {
            "xp": {
              "FreightPopShipmentRate": {
                "Id": "",
                "Currency": "",
                "DiscountedCost": 0,
                "ListCost": 0,
                "Service": "",
                "TransitDays": ""
              },
              "Service": ""
            },
            "FromAddress": {
              "xp": {
                "Accessorials": [
                  "LimitedAccessPickup"
                ]
              },
              "ID": "",
              "DateCreated": "2018-01-01T00:00:00-06:00",
              "CompanyName": "",
              "FirstName": "",
              "LastName": "",
              "Street1": "",
              "Street2": "",
              "City": "",
              "State": "",
              "Zip": "",
              "Country": "",
              "Phone": "",
              "AddressName": ""
            },
            "ToAddress": {
              "xp": {
                "Accessorials": [
                  "DestinationInsideDelivery"
                ],
                "Email": "",
                "LocationID": "",
                "AvalaraCertificateID": 0,
                "AvalaraCertificateExpiration": "2018-01-01T00:00:00-06:00"
              },
              "ID": "",
              "DateCreated": "2018-01-01T00:00:00-06:00",
              "CompanyName": "",
              "FirstName": "",
              "LastName": "",
              "Street1": "",
              "Street2": "",
              "City": "",
              "State": "",
              "Zip": "",
              "Country": "",
              "Phone": "",
              "AddressName": ""
            },
            "ID": "",
            "BuyerID": "",
            "Shipper": "",
            "DateShipped": "2018-01-01T00:00:00-06:00",
            "DateDelivered": "2018-01-01T00:00:00-06:00",
            "TrackingNumber": "",
            "Cost": 0,
            "Account": "",
            "FromAddressID": "",
            "ToAddressID": ""
          },
          "ShipmentItems": [
            {
              "OrderID": "",
              "LineItemID": "",
              "QuantityShipped": 0,
              "UnitPrice": 0,
              "CostCenter": "",
              "DateNeeded": "2018-01-01T00:00:00-06:00",
              "Product": {
                "ID": "",
                "Name": "",
                "Description": "",
                "QuantityMultiplier": 0,
                "ShipWeight": 0,
                "ShipHeight": 0,
                "ShipWidth": 0,
                "ShipLength": 0
              },
              "Variant": {
                "ID": "",
                "Name": "",
                "Description": "",
                "ShipWeight": 0,
                "ShipHeight": 0,
                "ShipWidth": 0,
                "ShipLength": 0
              },
              "Specs": [
                {
                  "SpecID": "",
                  "Name": "",
                  "OptionID": "",
                  "Value": "",
                  "PriceMarkupType": "NoMarkup",
                  "PriceMarkup": 0
                }
              ]
            }
          ]
        },
        "properties": {
          "Shipment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceShipment"
              }
            ]
          },
          "ShipmentItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentItem"
            }
          }
        }
      },
      "ShipmentItem": {
        "type": "object",
        "example": {
          "OrderID": "",
          "LineItemID": "",
          "QuantityShipped": 0,
          "UnitPrice": 0,
          "CostCenter": "",
          "DateNeeded": "2018-01-01T00:00:00-06:00",
          "Product": {
            "ID": "",
            "Name": "",
            "Description": "",
            "QuantityMultiplier": 0,
            "ShipWeight": 0,
            "ShipHeight": 0,
            "ShipWidth": 0,
            "ShipLength": 0
          },
          "Variant": {
            "ID": "",
            "Name": "",
            "Description": "",
            "ShipWeight": 0,
            "ShipHeight": 0,
            "ShipWidth": 0,
            "ShipLength": 0
          },
          "Specs": [
            {
              "SpecID": "",
              "Name": "",
              "OptionID": "",
              "Value": "",
              "PriceMarkupType": "NoMarkup",
              "PriceMarkup": 0
            }
          ]
        },
        "properties": {
          "OrderID": {
            "type": "string"
          },
          "LineItemID": {
            "type": "string"
          },
          "QuantityShipped": {
            "type": "integer",
            "format": "int32"
          },
          "UnitPrice": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "CostCenter": {
            "type": "string",
            "readOnly": true
          },
          "DateNeeded": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemProduct"
              }
            ],
            "readOnly": true
          },
          "Variant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemVariant"
              }
            ],
            "readOnly": true
          },
          "Specs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemSpec"
            },
            "readOnly": true
          }
        }
      },
      "ShipmentRate": {
        "type": "object",
        "example": {
          "Id": "",
          "Currency": "",
          "DiscountedCost": 0,
          "ListCost": 0,
          "Service": "",
          "TransitDays": ""
        },
        "properties": {
          "Id": {
            "type": "string"
          },
          "Currency": {
            "type": "string"
          },
          "DiscountedCost": {
            "type": "number",
            "format": "float"
          },
          "ListCost": {
            "type": "number",
            "format": "float"
          },
          "Service": {
            "type": "string"
          },
          "TransitDays": {
            "type": "string"
          }
        }
      },
      "ShipmentXp": {
        "type": "object",
        "example": {
          "FreightPopShipmentRate": {
            "Id": "",
            "Currency": "",
            "DiscountedCost": 0,
            "ListCost": 0,
            "Service": "",
            "TransitDays": ""
          },
          "Service": ""
        },
        "properties": {
          "FreightPopShipmentRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShipmentRate"
              }
            ]
          },
          "Service": {
            "type": "string"
          }
        }
      },
      "Spec": {
        "type": "object",
        "example": {
          "ID": "",
          "ListOrder": 0,
          "Name": "",
          "DefaultValue": "",
          "Required": false,
          "AllowOpenText": false,
          "DefaultOptionID": "",
          "DefinesVariant": false,
          "OptionCount": 0,
          "Options": [
            {
              "ID": "",
              "Value": "",
              "ListOrder": 0,
              "IsOpenText": false,
              "PriceMarkupType": "NoMarkup",
              "PriceMarkup": 0
            }
          ]
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "ListOrder": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string"
          },
          "DefaultValue": {
            "type": "string"
          },
          "Required": {
            "type": "boolean"
          },
          "AllowOpenText": {
            "type": "boolean"
          },
          "DefaultOptionID": {
            "type": "string"
          },
          "DefinesVariant": {
            "type": "boolean"
          },
          "OptionCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecOption"
            },
            "readOnly": true
          }
        }
      },
      "SpecOption": {
        "type": "object",
        "example": {
          "ID": "",
          "Value": "",
          "ListOrder": 0,
          "IsOpenText": false,
          "PriceMarkupType": "NoMarkup",
          "PriceMarkup": 0
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          },
          "ListOrder": {
            "type": "integer",
            "format": "int32"
          },
          "IsOpenText": {
            "type": "boolean"
          },
          "PriceMarkupType": {
            "enum": [
              "NoMarkup",
              "AmountPerQuantity",
              "AmountTotal",
              "Percentage"
            ],
            "type": "string"
          },
          "PriceMarkup": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "SpecOptionXp": {
        "type": "object",
        "example": {
          "Description": "",
          "SpecID": ""
        },
        "properties": {
          "Description": {
            "type": "string"
          },
          "SpecID": {
            "type": "string"
          }
        }
      },
      "SpecValue": {
        "type": "object",
        "example": {
          "SpecName": "",
          "SpecOptionValue": "",
          "PriceMarkup": ""
        },
        "properties": {
          "SpecName": {
            "type": "string"
          },
          "SpecOptionValue": {
            "type": "string"
          },
          "PriceMarkup": {
            "type": "string"
          }
        }
      },
      "SuperMarketplaceBuyer": {
        "type": "object",
        "example": {
          "Buyer": {
            "xp": {
              "MarkupPercent": 0
            },
            "ID": "",
            "Name": "",
            "DefaultCatalogID": "",
            "Active": false,
            "DateCreated": "2018-01-01T00:00:00-06:00"
          },
          "Markup": {
            "Percent": 0
          }
        },
        "properties": {
          "Buyer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceBuyer"
              }
            ]
          },
          "Markup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BuyerMarkup"
              }
            ]
          }
        }
      },
      "SuperMarketplaceProduct": {
        "type": "object",
        "example": {
          "ID": "",
          "Product": {
            "xp": {
              "Status": "Draft",
              "HasVariants": false,
              "Note": "",
              "Tax": {
                "Category": "",
                "Code": "",
                "Description": ""
              },
              "UnitOfMeasure": {
                "Qty": 0,
                "Unit": ""
              },
              "ProductType": "Standard",
              "IsResale": false,
              "Accessorials": [
                "Freezable"
              ],
              "Currency": "CAD"
            },
            "OwnerID": "",
            "DefaultPriceScheduleID": "",
            "AutoForward": false,
            "ID": "",
            "Name": "",
            "Description": "",
            "QuantityMultiplier": 0,
            "ShipWeight": 0,
            "ShipHeight": 0,
            "ShipWidth": 0,
            "ShipLength": 0,
            "Active": false,
            "SpecCount": 0,
            "VariantCount": 0,
            "ShipFromAddressID": "",
            "Inventory": {
              "Enabled": false,
              "NotificationPoint": 0,
              "VariantLevelTracking": false,
              "OrderCanExceed": false,
              "QuantityAvailable": 0,
              "LastUpdated": "2018-01-01T00:00:00-06:00"
            },
            "DefaultSupplierID": ""
          },
          "PriceSchedule": {
            "ID": "",
            "Name": "",
            "ApplyTax": false,
            "ApplyShipping": false,
            "MinQuantity": 0,
            "MaxQuantity": 0,
            "UseCumulativeQuantity": false,
            "RestrictedQuantity": false,
            "PriceBreaks": [
              {
                "Quantity": 0,
                "Price": 0
              }
            ]
          },
          "Specs": [
            {
              "ID": "",
              "ListOrder": 0,
              "Name": "",
              "DefaultValue": "",
              "Required": false,
              "AllowOpenText": false,
              "DefaultOptionID": "",
              "DefinesVariant": false,
              "OptionCount": 0,
              "Options": [
                {
                  "ID": "",
                  "Value": "",
                  "ListOrder": 0,
                  "IsOpenText": false,
                  "PriceMarkupType": "NoMarkup",
                  "PriceMarkup": 0
                }
              ]
            }
          ],
          "Variants": [
            {
              "xp": {
                "SpecCombo": "",
                "SpecValues": [
                  {
                    "SpecName": "",
                    "SpecOptionValue": "",
                    "PriceMarkup": ""
                  }
                ],
                "NewID": ""
              },
              "ID": "",
              "Name": "",
              "Description": "",
              "Active": false,
              "ShipWeight": 0,
              "ShipHeight": 0,
              "ShipWidth": 0,
              "ShipLength": 0,
              "Inventory": {
                "QuantityAvailable": 0,
                "LastUpdated": "2018-01-01T00:00:00-06:00"
              },
              "Specs": [
                {
                  "SpecID": "",
                  "Name": "",
                  "OptionID": "",
                  "Value": "",
                  "PriceMarkupType": "NoMarkup",
                  "PriceMarkup": 0
                }
              ]
            }
          ],
          "Images": [
            {
              "ListOrderWithinType": 0,
              "ID": "",
              "Title": "",
              "Active": false,
              "Url": "",
              "Type": "Image",
              "Tags": [
                ""
              ],
              "FileName": "",
              "Metadata": {
                "IsUrlOverridden": false,
                "ContentType": "",
                "SizeBytes": 0,
                "ImageHeight": 0,
                "ImageWidth": 0,
                "ImageVerticalResolution": 0,
                "ImageHorizontalResolution": 0
              }
            }
          ],
          "Attachments": [
            {
              "ListOrderWithinType": 0,
              "ID": "",
              "Title": "",
              "Active": false,
              "Url": "",
              "Type": "Image",
              "Tags": [
                ""
              ],
              "FileName": "",
              "Metadata": {
                "IsUrlOverridden": false,
                "ContentType": "",
                "SizeBytes": 0,
                "ImageHeight": 0,
                "ImageWidth": 0,
                "ImageVerticalResolution": 0,
                "ImageHorizontalResolution": 0
              }
            }
          ]
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceProduct"
              }
            ]
          },
          "PriceSchedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceSchedule"
              }
            ]
          },
          "Specs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Spec"
            }
          },
          "Variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceVariant"
            }
          },
          "Images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetForDelivery"
            }
          },
          "Attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetForDelivery"
            }
          }
        }
      },
      "SuperShipment": {
        "type": "object",
        "example": {
          "Shipment": {
            "xp": {
              "FreightPopShipmentRate": {
                "Id": "",
                "Currency": "",
                "DiscountedCost": 0,
                "ListCost": 0,
                "Service": "",
                "TransitDays": ""
              },
              "Service": ""
            },
            "FromAddress": {
              "xp": {
                "Accessorials": [
                  "LimitedAccessPickup"
                ]
              },
              "ID": "",
              "DateCreated": "2018-01-01T00:00:00-06:00",
              "CompanyName": "",
              "FirstName": "",
              "LastName": "",
              "Street1": "",
              "Street2": "",
              "City": "",
              "State": "",
              "Zip": "",
              "Country": "",
              "Phone": "",
              "AddressName": ""
            },
            "ToAddress": {
              "xp": {
                "Accessorials": [
                  "DestinationInsideDelivery"
                ],
                "Email": "",
                "LocationID": "",
                "AvalaraCertificateID": 0,
                "AvalaraCertificateExpiration": "2018-01-01T00:00:00-06:00"
              },
              "ID": "",
              "DateCreated": "2018-01-01T00:00:00-06:00",
              "CompanyName": "",
              "FirstName": "",
              "LastName": "",
              "Street1": "",
              "Street2": "",
              "City": "",
              "State": "",
              "Zip": "",
              "Country": "",
              "Phone": "",
              "AddressName": ""
            },
            "ID": "",
            "BuyerID": "",
            "Shipper": "",
            "DateShipped": "2018-01-01T00:00:00-06:00",
            "DateDelivered": "2018-01-01T00:00:00-06:00",
            "TrackingNumber": "",
            "Cost": 0,
            "Account": "",
            "FromAddressID": "",
            "ToAddressID": ""
          },
          "ShipmentItems": [
            {
              "OrderID": "",
              "LineItemID": "",
              "QuantityShipped": 0,
              "UnitPrice": 0,
              "CostCenter": "",
              "DateNeeded": "2018-01-01T00:00:00-06:00",
              "Product": {
                "ID": "",
                "Name": "",
                "Description": "",
                "QuantityMultiplier": 0,
                "ShipWeight": 0,
                "ShipHeight": 0,
                "ShipWidth": 0,
                "ShipLength": 0
              },
              "Variant": {
                "ID": "",
                "Name": "",
                "Description": "",
                "ShipWeight": 0,
                "ShipHeight": 0,
                "ShipWidth": 0,
                "ShipLength": 0
              },
              "Specs": [
                {
                  "SpecID": "",
                  "Name": "",
                  "OptionID": "",
                  "Value": "",
                  "PriceMarkupType": "NoMarkup",
                  "PriceMarkup": 0
                }
              ]
            }
          ]
        },
        "properties": {
          "Shipment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceShipment"
              }
            ]
          },
          "ShipmentItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentItem"
            }
          }
        }
      },
      "SupplierAddressXP": {
        "type": "object",
        "example": {
          "Accessorials": [
            "LimitedAccessPickup"
          ]
        },
        "properties": {
          "Accessorials": {
            "type": "string",
            "enum": [
              "LimitedAccessPickup",
              "OriginExhibition",
              "OriginInsidePickup",
              "OriginLiftGate",
              "ResidentialPickup"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SupplierCategoriesFilter": {
        "type": "object",
        "example": {
          "Display": "",
          "Path": "",
          "Items": [
            {
              "Text": "",
              "Value": ""
            }
          ]
        },
        "properties": {
          "Display": {
            "type": "string"
          },
          "Path": {
            "type": "string"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierCategoriesFilterItem"
            }
          }
        }
      },
      "SupplierCategoriesFilterItem": {
        "type": "object",
        "example": {
          "Text": "",
          "Value": ""
        },
        "properties": {
          "Text": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          }
        }
      },
      "SupplierCategoryConfig": {
        "type": "object",
        "example": {
          "id": "",
          "timeStamp": "2018-01-01T00:00:00-06:00",
          "MarketplaceName": "",
          "Filters": [
            {
              "Display": "",
              "Path": "",
              "Items": [
                {
                  "Text": "",
                  "Value": ""
                }
              ]
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string"
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "MarketplaceName": {
            "type": "string"
          },
          "Filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierCategoriesFilter"
            }
          }
        }
      },
      "SupplierXp": {
        "type": "object",
        "example": {
          "Description": "",
          "SupportContact": {
            "Name": "",
            "Email": "",
            "Phone": ""
          },
          "SyncFreightPop": false,
          "ApiClientID": "",
          "Currency": "CAD"
        },
        "properties": {
          "Description": {
            "type": "string"
          },
          "SupportContact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Contact"
              }
            ]
          },
          "SyncFreightPop": {
            "type": "boolean"
          },
          "ApiClientID": {
            "type": "string"
          },
          "Currency": {
            "enum": [
              "CAD",
              "HKD",
              "ISK",
              "PHP",
              "DKK",
              "HUF",
              "CZK",
              "GBP",
              "RON",
              "SEK",
              "IDR",
              "INR",
              "BRL",
              "RUB",
              "HRK",
              "JPY",
              "THB",
              "CHF",
              "EUR",
              "MYR",
              "BGN",
              "TRY",
              "CNY",
              "NOK",
              "NZD",
              "ZAR",
              "USD",
              "MXN",
              "SGD",
              "AUD",
              "ILS",
              "KRW",
              "PLN"
            ],
            "type": "string"
          }
        }
      },
      "TaxCertificate": {
        "type": "object",
        "example": {
          "ID": 0,
          "SignedDate": "2018-01-01T00:00:00-06:00",
          "ExpirationDate": "2018-01-01T00:00:00-06:00",
          "ExposureZoneName": "",
          "Base64UrlEncodedPDF": "",
          "FileName": "",
          "ExemptionNumber": "",
          "Expired": false,
          "PDFUrl": ""
        },
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "SignedDate": {
            "type": "string",
            "format": "date-time"
          },
          "ExpirationDate": {
            "type": "string",
            "format": "date-time"
          },
          "ExposureZoneName": {
            "type": "string"
          },
          "Base64UrlEncodedPDF": {
            "type": "string"
          },
          "FileName": {
            "type": "string",
            "readOnly": true
          },
          "ExemptionNumber": {
            "type": "string"
          },
          "Expired": {
            "type": "boolean",
            "readOnly": true
          },
          "PDFUrl": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "TaxCode": {
        "type": "object",
        "example": {
          "Category": "",
          "Code": "",
          "Description": ""
        },
        "properties": {
          "Category": {
            "type": "string"
          },
          "Code": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "TaxProperties": {
        "type": "object",
        "example": {
          "Category": "",
          "Code": "",
          "Description": ""
        },
        "properties": {
          "Category": {
            "type": "string"
          },
          "Code": {
            "type": "string"
          },
          "Description": {
            "type": "string",
            "maxLength": 200
          }
        }
      },
      "UnitOfMeasure": {
        "type": "object",
        "example": {
          "Qty": 0,
          "Unit": ""
        },
        "properties": {
          "Qty": {
            "type": "integer",
            "format": "int32"
          },
          "Unit": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "example": {
          "ID": "",
          "Username": "",
          "Password": "",
          "FirstName": "",
          "LastName": "",
          "Email": "",
          "Phone": "",
          "TermsAccepted": "2018-01-01T00:00:00-06:00",
          "Active": false,
          "AvailableRoles": [
            ""
          ],
          "DateCreated": "2018-01-01T00:00:00-06:00",
          "PasswordLastSetDate": "2018-01-01T00:00:00-06:00"
        },
        "properties": {
          "ID": {
            "type": "string"
          },
          "Username": {
            "type": "string"
          },
          "Password": {
            "type": "string",
            "format": "password"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "TermsAccepted": {
            "type": "string",
            "format": "date-time"
          },
          "Active": {
            "type": "boolean"
          },
          "AvailableRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "PasswordLastSetDate": {
            "type": "string",
            "format": "password",
            "readOnly": true
          }
        }
      },
      "UserGroupAssignment": {
        "type": "object",
        "example": {
          "UserGroupID": "",
          "UserID": ""
        },
        "properties": {
          "UserGroupID": {
            "type": "string"
          },
          "UserID": {
            "type": "string"
          }
        }
      },
      "UserGroupXp": {
        "type": "object",
        "example": {
          "Type": "",
          "Role": ""
        },
        "properties": {
          "Type": {
            "type": "string"
          },
          "Role": {
            "type": "string"
          }
        }
      },
      "UserXp": {
        "type": "object",
        "example": {
          "Country": ""
        },
        "properties": {
          "Country": {
            "type": "string"
          }
        }
      },
      "VariantInventory": {
        "type": "object",
        "example": {
          "QuantityAvailable": 0,
          "LastUpdated": "2018-01-01T00:00:00-06:00"
        },
        "properties": {
          "QuantityAvailable": {
            "type": "integer",
            "format": "int32"
          },
          "LastUpdated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "VariantSpec": {
        "type": "object",
        "example": {
          "SpecID": "",
          "Name": "",
          "OptionID": "",
          "Value": "",
          "PriceMarkupType": "NoMarkup",
          "PriceMarkup": 0
        },
        "properties": {
          "SpecID": {
            "type": "string"
          },
          "Name": {
            "type": "string",
            "readOnly": true
          },
          "OptionID": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          },
          "PriceMarkupType": {
            "enum": [
              "NoMarkup",
              "AmountPerQuantity",
              "AmountTotal",
              "Percentage"
            ],
            "type": "string"
          },
          "PriceMarkup": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "Authentication": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/addresses": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.CreateAdminAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  }
                ],
                "required": [
                  "Street1",
                  "City",
                  "State",
                  "Zip",
                  "Country"
                ]
              }
            }
          }
        },
        "summary": "Create a new validated address admin address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "AdminAddressAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/addresses/{addressID}": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.SaveAdminAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  }
                ],
                "required": [
                  "Street1",
                  "City",
                  "State",
                  "Zip",
                  "Country"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Create or update a validated address admin address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "AdminAddressAdmin",
              "FullAccess"
            ]
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.PatchAdminAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Partially update a validated address admin address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "AdminAddressAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/assets": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAsset"
                }
              }
            }
          }
        },
        "operationId": "Assets.List",
        "tags": [
          "Assets"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "List Assets",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/assets/{assetID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          }
        },
        "operationId": "Assets.Get",
        "tags": [
          "Assets"
        ],
        "parameters": [
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get an Asset",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          }
        },
        "operationId": "Assets.Update",
        "tags": [
          "Assets"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Asset"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Update an Asset",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Assets.Delete",
        "tags": [
          "Assets"
        ],
        "parameters": [
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete an Asset",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/avalara/{companyID}/certificate/{locationID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCertificate"
                }
              }
            }
          }
        },
        "operationId": "Avalaras.GetCertificate",
        "tags": [
          "Avalaras"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "description": "ID of the company.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locationID",
            "in": "path",
            "description": "ID of the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get tax exeption certificate details",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCertificate"
                }
              }
            }
          }
        },
        "operationId": "Avalaras.CreateCertificate",
        "tags": [
          "Avalaras"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaxCertificate"
                  }
                ],
                "required": [
                  "SignedDate",
                  "ExpirationDate",
                  "ExposureZoneName",
                  "Base64UrlEncodedPDF"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "description": "ID of the company.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locationID",
            "in": "path",
            "description": "ID of the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Create tax exeption certificate",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCertificate"
                }
              }
            }
          }
        },
        "operationId": "Avalaras.UpdateCertificate",
        "tags": [
          "Avalaras"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaxCertificate"
                  }
                ],
                "required": [
                  "SignedDate",
                  "ExpirationDate",
                  "ExposureZoneName",
                  "Base64UrlEncodedPDF"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "description": "ID of the company.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locationID",
            "in": "path",
            "description": "ID of the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Update tax exeption certificate",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/avalara/{companyID}/certificate/{locationID}/pdf": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "operationId": "Avalaras.DownloadCertificate",
        "tags": [
          "Avalaras"
        ],
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "description": "ID of the company.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locationID",
            "in": "path",
            "description": "ID of the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Download a certificate.",
        "description": "",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/avalara/code": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTaxCode"
                }
              }
            }
          }
        },
        "operationId": "Avalaras.ListTaxCodes",
        "tags": [
          "Avalaras"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "List Tax Codes",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyer": {
      "post": {
        "responses": {
          "200": {
            "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuperMarketplaceBuyer"
                }
              }
            }
          }
        },
        "operationId": "Buyers.Create",
        "tags": [
          "Buyers"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SuperMarketplaceBuyer"
                  }
                ]
              }
            }
          }
        },
        "summary": "POST Marketplace Buyer",
        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
        "security": [
          {
            "OAuth2": [
              "BuyerAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyer/{buyerID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuperMarketplaceBuyer"
                }
              }
            }
          }
        },
        "operationId": "Buyers.Get",
        "tags": [
          "Buyers"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET Marketplace Buyer",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "BuyerAdmin",
              "FullAccess"
            ]
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuperMarketplaceBuyer"
                }
              }
            }
          }
        },
        "operationId": "Buyers.Put",
        "tags": [
          "Buyers"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SuperMarketplaceBuyer"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "PUT Marketplace Buyer",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "BuyerAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyerlocations/{buyerID}": {
      "post": {
        "responses": {
          "200": {
            "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceBuyerLocation"
                }
              }
            }
          }
        },
        "operationId": "BuyerLocations.Create",
        "tags": [
          "Buyer Locations"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceBuyerLocation"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST a Buyer Location",
        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
        "security": [
          {
            "OAuth2": [
              "UserGroupAdmin",
              "AddressAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyerlocations/{buyerID}/{buyerLocationID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceBuyerLocation"
                }
              }
            }
          }
        },
        "operationId": "BuyerLocations.Get",
        "tags": [
          "Buyer Locations"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerLocationID",
            "in": "path",
            "description": "ID of the buyer location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET a Buyer Location",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "UserGroupAdmin",
              "AddressAdmin",
              "FullAccess"
            ]
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceBuyerLocation"
                }
              }
            }
          }
        },
        "operationId": "BuyerLocations.Update",
        "tags": [
          "Buyer Locations"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceBuyerLocation"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerLocationID",
            "in": "path",
            "description": "ID of the buyer location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "PUT a Buyer Location",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "UserGroupAdmin",
              "AddressAdmin",
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "BuyerLocations.Delete",
        "tags": [
          "Buyer Locations"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerLocationID",
            "in": "path",
            "description": "ID of the buyer location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete a Buyer Location",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "UserGroupAdmin",
              "AddressAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyerlocations/{buyerID}/{buyerLocationID}/approvalpermissions": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupAssignment"
                  }
                }
              }
            }
          }
        },
        "operationId": "BuyerLocations.ListLocationApprovalPermissionAsssignments",
        "tags": [
          "Buyer Locations"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerLocationID",
            "in": "path",
            "description": "ID of the buyer location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET List of location approval permission user groups",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyerlocations/{buyerID}/{buyerLocationID}/approvalthreshold": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        },
        "operationId": "BuyerLocations.GetApprovalThreshold",
        "tags": [
          "Buyer Locations"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerLocationID",
            "in": "path",
            "description": "ID of the buyer location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET general approval threshold for location",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        },
        "operationId": "BuyerLocations.SetLocationApprovalThreshold",
        "tags": [
          "Buyer Locations"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerLocationID",
            "in": "path",
            "description": "ID of the buyer location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationApprovalThresholdUpdate",
            "in": "query",
            "description": "Location approval threshold update of the decimal.",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "POST set location approval threshold",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyerlocations/{buyerID}/{buyerLocationID}/permissions": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupAssignment"
                  }
                }
              }
            }
          }
        },
        "operationId": "BuyerLocations.ListLocationPermissionUserGroups",
        "tags": [
          "Buyer Locations"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerLocationID",
            "in": "path",
            "description": "ID of the buyer location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET List of location permission user groups",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupAssignment"
                  }
                }
              }
            }
          }
        },
        "operationId": "BuyerLocations.UpdateLocationPermissions",
        "tags": [
          "Buyer Locations"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerLocationID",
            "in": "path",
            "description": "ID of the buyer location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationPermissionUpdate",
            "in": "query",
            "description": "Location permission update of the user group assignment.",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "POST location permissions, add or delete access",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyerlocations/{buyerID}/{buyerLocationID}/users": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMarketplaceUser"
                }
              }
            }
          }
        },
        "operationId": "BuyerLocations.ListLocationUsers",
        "tags": [
          "Buyer Locations"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerLocationID",
            "in": "path",
            "description": "ID of the buyer location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "LIST orders for a specific location as a buyer, ensures user has access to location orders",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/{locationID}/catalogs/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Catalogs.SetAssignments",
        "tags": [
          "Catalogs"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceCatalogAssignmentRequest"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationID",
            "in": "path",
            "description": "ID of the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Set catalog assignments for a location",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "UserGroupAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/addresses": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.CreateBuyerAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  }
                ],
                "required": [
                  "Street1",
                  "City",
                  "State",
                  "Zip",
                  "Country"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Create a new validated address buyer address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "AddressAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/addresses/{addressID}": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.SaveBuyerAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  }
                ],
                "required": [
                  "Street1",
                  "City",
                  "State",
                  "Zip",
                  "Country"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Create or update a validated address buyer address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "AddressAdmin",
              "FullAccess"
            ]
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.PatchBuyerAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Partially update a validated address buyer address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "AddressAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/assets": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssetForDelivery"
                }
              }
            }
          }
        },
        "operationId": "BuyerContents.ListAssets",
        "tags": [
          "Buyer Contents"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Assets Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/assets/{assetID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "BuyerContents.SaveAssetAssignment",
        "tags": [
          "Buyer Contents"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Asset to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "BuyerContents.DeleteAssetAssignment",
        "tags": [
          "Buyer Contents"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Asset from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/assets/{assetID}/assignments/moveto/{listOrderWithinType}": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "BuyerContents.MoveAssetAssignment",
        "tags": [
          "Buyer Contents"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listOrderWithinType",
            "in": "path",
            "description": "List order within type of the content.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Reorder Asset Assignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/catalogs": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMarketplaceCatalog"
                }
              }
            }
          }
        },
        "operationId": "Catalogs.List",
        "tags": [
          "Catalogs"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "GET a list of Catalogs",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "ProductReader",
              "FullAccess"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceCatalog"
                }
              }
            }
          }
        },
        "operationId": "Catalogs.Post",
        "tags": [
          "Catalogs"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceCatalog"
                  }
                ],
                "required": [
                  "Name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Create a new Catalog",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/catalogs/{catalogID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceCatalog"
                }
              }
            }
          }
        },
        "operationId": "Catalogs.Get",
        "tags": [
          "Catalogs"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET a single Catalog",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "ProductReader",
              "FullAccess"
            ]
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceCatalog"
                }
              }
            }
          }
        },
        "operationId": "Catalogs.Put",
        "tags": [
          "Catalogs"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceCatalog"
                  }
                ],
                "required": [
                  "Name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "PUT Catalog",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Catalogs.Delete",
        "tags": [
          "Catalogs"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "DELETE Catalog",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/catalogs/assignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMarketplaceCatalogAssignment"
                }
              }
            }
          }
        },
        "operationId": "Catalogs.GetAssignments",
        "tags": [
          "Catalogs"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "catalogID",
            "in": "query",
            "description": "ID of the catalog.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationID",
            "in": "query",
            "description": "ID of the location.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get a list of catalog location assignments",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/catalogs/user/{userID}/location/{locationID}/Add": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Catalogs.SyncOnAddToLocation",
        "tags": [
          "Catalogs"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationID",
            "in": "path",
            "description": "ID of the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "SYNC User Location Catalogs On Add To Location",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/catalogs/user/{userID}/location/{locationID}/Remove": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Catalogs.SyncOnRemoveFromLocation",
        "tags": [
          "Catalogs"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationID",
            "in": "path",
            "description": "ID of the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "SYNC User Location Catalogs On Remove From Location",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/creditcards": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCard"
                }
              }
            }
          }
        },
        "operationId": "CreditCardAuthorizations.Post",
        "tags": [
          "Credit Card Authorizations"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OrderCloudIntegrationsCreditCardToken"
                  }
                ],
                "required": [
                  "ExpirationDate",
                  "CCBillingAddress"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Credit Cards",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "CreditCardAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/image": {
      "get": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "BuyerContents.GetFirstImage",
        "tags": [
          "Buyer Contents"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Resource's primary image",
        "description": "",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/buyers/{buyerID}/schemas/{schemaID}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocument"
                }
              }
            }
          }
        },
        "operationId": "BuyerContents.ListDocuments",
        "tags": [
          "Buyer Contents"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Documents Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/buyers/{buyerID}/schemas/{schemaID}/documents/{documentID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "BuyerContents.SaveDocumentAssignment",
        "tags": [
          "Buyer Contents"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Document to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "BuyerContents.DeleteDocumentAssignment",
        "tags": [
          "Buyer Contents"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Document from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/catalogs/{catalogID}/assets": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssetForDelivery"
                }
              }
            }
          }
        },
        "operationId": "CatalogContents.ListAssets",
        "tags": [
          "Catalog Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Assets Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/catalogs/{catalogID}/assets/{assetID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CatalogContents.SaveAssetAssignment",
        "tags": [
          "Catalog Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Asset to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CatalogContents.DeleteAssetAssignment",
        "tags": [
          "Catalog Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Asset from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/catalogs/{catalogID}/assets/{assetID}/assignments/moveto/{listOrderWithinType}": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CatalogContents.MoveAssetAssignment",
        "tags": [
          "Catalog Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listOrderWithinType",
            "in": "path",
            "description": "List order within type of the catalog content.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Reorder Asset Assignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/catalogs/{catalogID}/categories/{categoryID}/assets": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssetForDelivery"
                }
              }
            }
          }
        },
        "operationId": "CategoryContents.ListAssets",
        "tags": [
          "Category Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Assets Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/catalogs/{catalogID}/categories/{categoryID}/assets/{assetID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CategoryContents.SaveAssetAssignment",
        "tags": [
          "Category Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Asset to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CategoryContents.DeleteAssetAssignment",
        "tags": [
          "Category Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Asset from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/catalogs/{catalogID}/categories/{categoryID}/assets/{assetID}/assignments/moveto/{listOrderWithinType}": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CategoryContents.MoveAssetAssignment",
        "tags": [
          "Category Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listOrderWithinType",
            "in": "path",
            "description": "List order within type of the category content.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Reorder Asset Assignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/catalogs/{catalogID}/categories/{categoryID}/image": {
      "get": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CategoryContents.GetFirstImage",
        "tags": [
          "Category Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Resource's primary image",
        "description": "",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/catalogs/{catalogID}/categories/{categoryID}/schemas/{schemaID}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocument"
                }
              }
            }
          }
        },
        "operationId": "CategoryContents.ListDocuments",
        "tags": [
          "Category Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Documents Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/catalogs/{catalogID}/categories/{categoryID}/schemas/{schemaID}/documents/{documentID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CategoryContents.SaveDocumentAssignment",
        "tags": [
          "Category Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Document to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CategoryContents.DeleteDocumentAssignment",
        "tags": [
          "Category Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Document from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/catalogs/{catalogID}/image": {
      "get": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CatalogContents.GetFirstImage",
        "tags": [
          "Catalog Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Resource's primary image",
        "description": "",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/catalogs/{catalogID}/schemas/{schemaID}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocument"
                }
              }
            }
          }
        },
        "operationId": "CatalogContents.ListDocuments",
        "tags": [
          "Catalog Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Documents Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/catalogs/{catalogID}/schemas/{schemaID}/documents/{documentID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CatalogContents.SaveDocumentAssignment",
        "tags": [
          "Catalog Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Document to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "CatalogContents.DeleteDocumentAssignment",
        "tags": [
          "Catalog Contents"
        ],
        "parameters": [
          {
            "name": "catalogID",
            "in": "path",
            "description": "ID of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Document from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/exchangerates/{currency}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOrderCloudIntegrationsConversionRate"
                }
              }
            }
          }
        },
        "operationId": "ExchangeRates.Get",
        "tags": [
          "Exchange Rates"
        ],
        "parameters": [
          {
            "name": "currency",
            "in": "path",
            "description": "Currency of the order cloud integrations conversion rate. Possible values: CAD, HKD, ISK, PHP, DKK, HUF, CZK, GBP, RON, SEK, IDR, INR, BRL, RUB, HRK, JPY, THB, CHF, EUR, MYR, BGN, TRY, CNY, NOK, NZD, ZAR, USD, MXN, SGD, AUD, ILS, KRW, PLN.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CAD",
                "HKD",
                "ISK",
                "PHP",
                "DKK",
                "HUF",
                "CZK",
                "GBP",
                "RON",
                "SEK",
                "IDR",
                "INR",
                "BRL",
                "RUB",
                "HRK",
                "JPY",
                "THB",
                "CHF",
                "EUR",
                "MYR",
                "BGN",
                "TRY",
                "CNY",
                "NOK",
                "NZD",
                "ZAR",
                "USD",
                "MXN",
                "SGD",
                "AUD",
                "ILS",
                "KRW",
                "PLN"
              ]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get a single exchange rate.",
        "description": "",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/exchangerates/supportedrates": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOrderCloudIntegrationsConversionRate"
                }
              }
            }
          }
        },
        "operationId": "ExchangeRates.GetRateList",
        "tags": [
          "Exchange Rates"
        ],
        "summary": "Get a single exchange rate rate list.",
        "description": "",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/marketplace/{marketplaceID}/supplier/category/config": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierCategoryConfig"
                }
              }
            }
          }
        },
        "operationId": "SupplierCategoryConfigs.Get",
        "tags": [
          "Supplier Category Configs"
        ],
        "parameters": [
          {
            "name": "marketplaceID",
            "in": "path",
            "description": "ID of the marketplace.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET SupplierCategoryConfig",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "SupplierReader",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/me/addresses": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyerAddress"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.CreateMeAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BuyerAddress"
                  }
                ],
                "required": [
                  "Street1",
                  "City",
                  "State",
                  "Zip",
                  "Country"
                ]
              }
            }
          }
        },
        "summary": "Create a new validated address me address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "MeAddressAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/me/addresses/{addressID}": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyerAddress"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.SaveMeAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BuyerAddress"
                  }
                ],
                "required": [
                  "Street1",
                  "City",
                  "State",
                  "Zip",
                  "Country"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Create or update a validated address me address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "MeAddressAdmin",
              "FullAccess"
            ]
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "ValidatedAddresses.PatchMeAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BuyerAddress"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Partially update a validated address me address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "MeAddressAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/me/creditcards": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyerCreditCard"
                }
              }
            }
          }
        },
        "operationId": "MeCreditCardAuthorizations.MePost",
        "tags": [
          "Me Credit Card Authorizations"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OrderCloudIntegrationsCreditCardToken"
                  }
                ],
                "required": [
                  "ExpirationDate",
                  "CCBillingAddress"
                ]
              }
            }
          }
        },
        "summary": "POST Credit Card",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "MeCreditCardAdmin",
              "CreditCardAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/me/payments": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "operationId": "MePayments.Post",
        "tags": [
          "Me Payments"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OrderCloudIntegrationsCreditCardPayment"
                  }
                ],
                "required": [
                  "OrderID",
                  "PaymentID",
                  "Currency",
                  "MerchantID"
                ]
              }
            }
          }
        },
        "summary": "POST Payment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/me/products/{productID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuperMarketplaceProduct"
                }
              }
            }
          }
        },
        "operationId": "Mes.GetSuperProduct",
        "tags": [
          "Mes"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET Super Product",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/{buyerId}/address": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceAddressBuyer"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationUsers.PostAddress",
        "tags": [
          "Orchestration Users"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceAddressBuyer"
                  }
                ],
                "required": [
                  "Street1",
                  "City",
                  "State",
                  "Zip",
                  "Country"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerId",
            "in": "path",
            "description": "Buyer id of the marketplace address buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace address buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Address",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/{buyerId}/addressassignment": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceAddressAssignment"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationUsers.PostAddressAssignment",
        "tags": [
          "Orchestration Users"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceAddressAssignment"
                  }
                ],
                "required": [
                  "AddressID"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerId",
            "in": "path",
            "description": "Buyer id of the marketplace address assignment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace address assignment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST AddressAssignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/{buyerId}/costcenter": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceCostCenter"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationUsers.PostCostCenter",
        "tags": [
          "Orchestration Users"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceCostCenter"
                  }
                ],
                "required": [
                  "Name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerId",
            "in": "path",
            "description": "Buyer id of the marketplace cost center.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace cost center.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST CostCenter",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/{buyerId}/user": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceUser"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationUsers.PostUser",
        "tags": [
          "Orchestration Users"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceUser"
                  }
                ],
                "required": [
                  "Username",
                  "FirstName",
                  "LastName",
                  "Email",
                  "Active"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerId",
            "in": "path",
            "description": "Buyer id of the marketplace user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST User",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/{buyerId}/usergroup": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceUserGroup"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationUsers.PostUserGroup",
        "tags": [
          "Orchestration Users"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceUserGroup"
                  }
                ],
                "required": [
                  "Name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerId",
            "in": "path",
            "description": "Buyer id of the marketplace user group.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace user group.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST UserGroup",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/{buyerId}/usergroupassignment": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceUserGroupAssignment"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationUsers.PostUserGroupAssignment",
        "tags": [
          "Orchestration Users"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceUserGroupAssignment"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "buyerId",
            "in": "path",
            "description": "Buyer id of the marketplace user group assignment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace user group assignment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST UserGroupAssignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/buyer": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceBuyer"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationUsers.PostBuyer",
        "tags": [
          "Orchestration Users"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceBuyer"
                  }
                ],
                "required": [
                  "Name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace buyer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Buyer",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/catalog": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceCatalog"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationProducts.PostCatalog",
        "tags": [
          "Orchestration Products"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceCatalog"
                  }
                ],
                "required": [
                  "Name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Catalog",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "CatalogAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/catalogproductassignment": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceCatalogAssignment"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationProducts.PostCatalogProductAssignment",
        "tags": [
          "Orchestration Products"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceCatalogAssignment"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace catalog assignment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Catalog Product Assignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "CatalogAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/priceschedule": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplacePriceSchedule"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationProducts.PostPriceSchedule",
        "tags": [
          "Orchestration Products"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplacePriceSchedule"
                  }
                ],
                "required": [
                  "Name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace price schedule.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Price Schedule",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "PriceScheduleAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/product": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceProduct"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationProducts.PostProduct",
        "tags": [
          "Orchestration Products"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceProduct"
                  }
                ],
                "required": [
                  "Name",
                  "QuantityMultiplier"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Product",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/productassignment": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceProductAssignment"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationProducts.PostProductAssignment",
        "tags": [
          "Orchestration Products"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceProductAssignment"
                  }
                ],
                "required": [
                  "ProductID",
                  "BuyerID"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace product assignment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Product Assignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/productfacet": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceProductFacet"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationProducts.PostProductFacet",
        "tags": [
          "Orchestration Products"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceProductFacet"
                  }
                ],
                "required": [
                  "Name",
                  "MinCount"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace product facet.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Product Facet",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductFacetAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/spec": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceSpec"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationProducts.PostSpec",
        "tags": [
          "Orchestration Products"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceSpec"
                  }
                ],
                "required": [
                  "Name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace spec.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Spec",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/specoption": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceSpecOption"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationProducts.PostSpecOption",
        "tags": [
          "Orchestration Products"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceSpecOption"
                  }
                ],
                "required": [
                  "Value"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace spec option.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Spec Option",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/{clientId}/specproductassignment": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceSpecProductAssignment"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationProducts.PostSpecProductAssignment",
        "tags": [
          "Orchestration Products"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceSpecProductAssignment"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Client id of the marketplace spec product assignment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Spec Product Assignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/orchestration/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOrchestrationLog"
                }
              }
            }
          }
        },
        "operationId": "OrchestrationLogs.List",
        "tags": [
          "Orchestration Logs"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ErrorType",
                  "Level",
                  "ResourceId",
                  "RecordId",
                  "RecordType",
                  "Action"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "GET Orchestration Logs",
        "description": "",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/order/{direction}/{orderID}/billto": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.SetBillingAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  }
                ],
                "required": [
                  "Street1",
                  "City",
                  "State",
                  "Zip",
                  "Country"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "Direction of the address. Possible values: Incoming, Outgoing.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Incoming",
                "Outgoing"
              ]
            }
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Set a billing address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "OrderAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/order/{direction}/{orderID}/shipto": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.SetShippingAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  }
                ],
                "required": [
                  "Street1",
                  "City",
                  "State",
                  "Zip",
                  "Country"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "Direction of the address. Possible values: Incoming, Outgoing.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Incoming",
                "Outgoing"
              ]
            }
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Set a shipping address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "OrderAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/order/{orderID}/details": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetails"
                }
              }
            }
          }
        },
        "operationId": "Orders.GetOrderDetails",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET order details as buyer, ensures user has access to location orders or created the order themselves",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/order/{orderID}/lineitems": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceLineItem"
                }
              }
            }
          }
        },
        "operationId": "Orders.UpsertLineItem",
        "tags": [
          "Orders"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceLineItem"
                  }
                ],
                "required": [
                  "ProductID",
                  "Quantity"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Add or update a line item to an order",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/order/{orderID}/shipmentswithitems": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarketplaceShipmentWithItems"
                  }
                }
              }
            }
          }
        },
        "operationId": "Orders.ListShipmentsWithItems",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET order shipments as buyer, ensures user has access to location orders or created the order themselves",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/order/acknowledgequote/{orderID}": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        },
        "operationId": "Orders.AcknowledgeQuoteOrder",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "POST Acknowledge Quote Order",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "OrderAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/order/location/{locationID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOrder"
                }
              }
            }
          }
        },
        "operationId": "Orders.ListLocationOrders",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "description": "ID of the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "LIST orders for a specific location as a buyer, ensures user has access to location orders",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/order/requestreturn/{orderID}": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Orders.RequestReturnEmail",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Send return requested email",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "Shopper",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/productFacets/{productFacetID}/assets": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssetForDelivery"
                }
              }
            }
          }
        },
        "operationId": "FacetContents.ListAssets",
        "tags": [
          "Facet Contents"
        ],
        "parameters": [
          {
            "name": "productFacetID",
            "in": "path",
            "description": "ID of the product facet.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Assets Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/productFacets/{productFacetID}/assets/{assetID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "FacetContents.SaveAssetAssignment",
        "tags": [
          "Facet Contents"
        ],
        "parameters": [
          {
            "name": "productFacetID",
            "in": "path",
            "description": "ID of the product facet.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Asset to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "FacetContents.DeleteAssetAssignment",
        "tags": [
          "Facet Contents"
        ],
        "parameters": [
          {
            "name": "productFacetID",
            "in": "path",
            "description": "ID of the product facet.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Asset from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/productFacets/{productFacetID}/assets/{assetID}/assignments/moveto/{listOrderWithinType}": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "FacetContents.MoveAssetAssignment",
        "tags": [
          "Facet Contents"
        ],
        "parameters": [
          {
            "name": "productFacetID",
            "in": "path",
            "description": "ID of the product facet.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listOrderWithinType",
            "in": "path",
            "description": "List order within type of the facet content.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Reorder Asset Assignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/productFacets/{productFacetID}/image": {
      "get": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "FacetContents.GetFirstImage",
        "tags": [
          "Facet Contents"
        ],
        "parameters": [
          {
            "name": "productFacetID",
            "in": "path",
            "description": "ID of the product facet.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Resource's primary image",
        "description": "",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/productFacets/{productFacetID}/schemas/{schemaID}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocument"
                }
              }
            }
          }
        },
        "operationId": "FacetContents.ListDocuments",
        "tags": [
          "Facet Contents"
        ],
        "parameters": [
          {
            "name": "productFacetID",
            "in": "path",
            "description": "ID of the product facet.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Documents Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/productFacets/{productFacetID}/schemas/{schemaID}/documents/{documentID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "FacetContents.SaveDocumentAssignment",
        "tags": [
          "Facet Contents"
        ],
        "parameters": [
          {
            "name": "productFacetID",
            "in": "path",
            "description": "ID of the product facet.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Document to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "FacetContents.DeleteDocumentAssignment",
        "tags": [
          "Facet Contents"
        ],
        "parameters": [
          {
            "name": "productFacetID",
            "in": "path",
            "description": "ID of the product facet.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Document from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/products": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSuperMarketplaceProduct"
                }
              }
            }
          }
        },
        "operationId": "Products.List",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "LIST Super Product",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "ProductReader",
              "FullAccess"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuperMarketplaceProduct"
                }
              }
            }
          }
        },
        "operationId": "Products.Post",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SuperMarketplaceProduct"
                  }
                ]
              }
            }
          }
        },
        "summary": "POST Super Product",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuperMarketplaceProduct"
                }
              }
            }
          }
        },
        "operationId": "Products.Get",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the super marketplace product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET Super Product",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "ProductReader",
              "FullAccess"
            ]
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuperMarketplaceProduct"
                }
              }
            }
          }
        },
        "operationId": "Products.Put",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SuperMarketplaceProduct"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the super marketplace product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "PUT Super Product",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Products.Delete",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "DELETE Product",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "ProductAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/products/{productID}/assets": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssetForDelivery"
                }
              }
            }
          }
        },
        "operationId": "ProductContents.ListAssets",
        "tags": [
          "Product Contents"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Assets Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/products/{productID}/assets/{assetID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "ProductContents.SaveAssetAssignment",
        "tags": [
          "Product Contents"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Asset to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "ProductContents.DeleteAssetAssignment",
        "tags": [
          "Product Contents"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Asset from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/products/{productID}/assets/{assetID}/assignments/moveto/{listOrderWithinType}": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "ProductContents.MoveAssetAssignment",
        "tags": [
          "Product Contents"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listOrderWithinType",
            "in": "path",
            "description": "List order within type of the product content.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Reorder Asset Assignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/products/{productID}/image": {
      "get": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "ProductContents.GetFirstImage",
        "tags": [
          "Product Contents"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Resource's primary image",
        "description": "",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/products/{productID}/schemas/{schemaID}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocument"
                }
              }
            }
          }
        },
        "operationId": "ProductContents.ListDocuments",
        "tags": [
          "Product Contents"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Documents Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/products/{productID}/schemas/{schemaID}/documents/{documentID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "ProductContents.SaveDocumentAssignment",
        "tags": [
          "Product Contents"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Document to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "ProductContents.DeleteDocumentAssignment",
        "tags": [
          "Product Contents"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Document from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/promotion/{promotionID}/assets": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssetForDelivery"
                }
              }
            }
          }
        },
        "operationId": "PromotionContents.ListAssets",
        "tags": [
          "Promotion Contents"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Assets Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/promotion/{promotionID}/assets/{assetID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "PromotionContents.SaveAssetAssignment",
        "tags": [
          "Promotion Contents"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Asset to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "PromotionContents.DeleteAssetAssignment",
        "tags": [
          "Promotion Contents"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Asset from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/promotion/{promotionID}/assets/{assetID}/assignments/moveto/{listOrderWithinType}": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "PromotionContents.MoveAssetAssignment",
        "tags": [
          "Promotion Contents"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listOrderWithinType",
            "in": "path",
            "description": "List order within type of the promotion content.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Reorder Asset Assignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/promotion/{promotionID}/image": {
      "get": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "PromotionContents.GetFirstImage",
        "tags": [
          "Promotion Contents"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Resource's primary image",
        "description": "",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/promotion/{promotionID}/schemas/{schemaID}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocument"
                }
              }
            }
          }
        },
        "operationId": "PromotionContents.ListDocuments",
        "tags": [
          "Promotion Contents"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Documents Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/promotion/{promotionID}/schemas/{schemaID}/documents/{documentID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "PromotionContents.SaveDocumentAssignment",
        "tags": [
          "Promotion Contents"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Document to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "PromotionContents.DeleteDocumentAssignment",
        "tags": [
          "Promotion Contents"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Document from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/schemas": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentSchema"
                }
              }
            }
          }
        },
        "operationId": "DocumentSchemas.List",
        "tags": [
          "Document Schemas"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "List Document Schemas",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/schemas/{schemaID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentSchema"
                }
              }
            }
          }
        },
        "operationId": "DocumentSchemas.Get",
        "tags": [
          "Document Schemas"
        ],
        "parameters": [
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get a Document Schema",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentSchema"
                }
              }
            }
          }
        },
        "operationId": "DocumentSchemas.Update",
        "tags": [
          "Document Schemas"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DocumentSchema"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Update a Document Schema",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DocumentSchemas.Delete",
        "tags": [
          "Document Schemas"
        ],
        "parameters": [
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete a Document Schema",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/schemas/{schemaID}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocument"
                }
              }
            }
          }
        },
        "operationId": "Documents.List",
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "List Documents",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/schemas/{schemaID}/documents/{documentID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        },
        "operationId": "Documents.Get",
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get a Document",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        },
        "operationId": "Documents.Update",
        "tags": [
          "Documents"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Document"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Update a Document",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Documents.Delete",
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete a Document",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/shipment": {
      "post": {
        "responses": {
          "200": {
            "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentCreateResponse"
                }
              }
            }
          }
        },
        "operationId": "Shipments.Create",
        "tags": [
          "Shipments"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SuperShipment"
                  }
                ]
              }
            }
          }
        },
        "summary": "POST Marketplace Shipment",
        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
        "security": [
          {
            "OAuth2": [
              "ShipmentAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/supplier": {
      "post": {
        "responses": {
          "201": {
            "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceSupplier"
                }
              }
            }
          }
        },
        "operationId": "Suppliers.Create",
        "tags": [
          "Suppliers"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MarketplaceSupplier"
                  }
                ],
                "required": [
                  "Name"
                ]
              }
            }
          }
        },
        "summary": "POST Marketplace Supplier",
        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
        "security": [
          {
            "OAuth2": [
              "SupplierAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/supplier/candelete/{locationID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "operationId": "Suppliers.CanDeleteLocation",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "description": "ID of the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET If Location Deletable",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "SupplierAddressAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/supplier/me/{supplierID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceSupplier"
                }
              }
            }
          }
        },
        "operationId": "Suppliers.GetMySupplier",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "GET MarketplaceSupplier",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "SupplierAdmin",
              "SupplierReader",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/suppliers/{supplierID}/addresses": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.CreateSupplierAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  }
                ],
                "required": [
                  "Street1",
                  "City",
                  "State",
                  "Zip",
                  "Country"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Create a new validated address supplier address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "SupplierAddressAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/suppliers/{supplierID}/addresses/{addressID}": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.SaveSupplierAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  }
                ],
                "required": [
                  "Street1",
                  "City",
                  "State",
                  "Zip",
                  "Country"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Create or update a validated address supplier address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "SupplierAddressAdmin",
              "FullAccess"
            ]
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "operationId": "ValidatedAddresses.PatchSupplierAddress",
        "tags": [
          "Validated Addresses"
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Partially update a validated address supplier address.",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "SupplierAddressAdmin",
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/suppliers/{supplierID}/assets": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssetForDelivery"
                }
              }
            }
          }
        },
        "operationId": "SupplierContents.ListAssets",
        "tags": [
          "Supplier Contents"
        ],
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Assets Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/suppliers/{supplierID}/assets/{assetID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SupplierContents.SaveAssetAssignment",
        "tags": [
          "Supplier Contents"
        ],
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Asset to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SupplierContents.DeleteAssetAssignment",
        "tags": [
          "Supplier Contents"
        ],
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Asset from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/suppliers/{supplierID}/assets/{assetID}/assignments/moveto/{listOrderWithinType}": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SupplierContents.MoveAssetAssignment",
        "tags": [
          "Supplier Contents"
        ],
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetID",
            "in": "path",
            "description": "ID of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listOrderWithinType",
            "in": "path",
            "description": "List order within type of the content.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Reorder Asset Assignment",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/suppliers/{supplierID}/image": {
      "get": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SupplierContents.GetFirstImage",
        "tags": [
          "Supplier Contents"
        ],
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Resource's primary image",
        "description": "",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/suppliers/{supplierID}/schemas/{schemaID}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocument"
                }
              }
            }
          }
        },
        "operationId": "SupplierContents.ListDocuments",
        "tags": [
          "Supplier Contents"
        ],
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Any additional key/value pairs passed in the query string are interpreted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Get Documents Assigned to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    },
    "/suppliers/{supplierID}/schemas/{schemaID}/documents/{documentID}/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SupplierContents.SaveDocumentAssignment",
        "tags": [
          "Supplier Contents"
        ],
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Assign Document to Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SupplierContents.DeleteDocumentAssignment",
        "tags": [
          "Supplier Contents"
        ],
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "description": "ID of the supplier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaID",
            "in": "path",
            "description": "ID of the schema.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentID",
            "in": "path",
            "description": "ID of the document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove Document from Resource",
        "description": "",
        "security": [
          {
            "OAuth2": [
              "FullAccess"
            ]
          }
        ]
      }
    }
  }
}